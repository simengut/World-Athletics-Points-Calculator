{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EVENT_CODES = {\n  '60m': '60m',\n  '100m': '100m',\n  '200m': '200m',\n  '400m': '400m',\n  '800m': '800m',\n  '1500m': '1500m',\n  '3000m': '3000m',\n  '5000m': '5000m',\n  '10000m': '10000m',\n  '60mH': '60mH',\n  '100mH': '100mH',\n  '110mH': '110mH',\n  '400mH': '400mH',\n  'High Jump': 'HJ',\n  'Pole Vault': 'PV',\n  'Long Jump': 'LJ',\n  'Triple Jump': 'TJ',\n  'Shot Put': 'SP',\n  'Discus Throw': 'DT',\n  'Hammer Throw': 'HT',\n  'Javelin Throw': 'JT',\n  'Decathlon': 'Decathlon',\n  'Heptathlon': 'Heptathlon',\n  'Pentathlon': 'Pentathlon'\n};\nfunction EventComparison({\n  points,\n  gender,\n  season\n}) {\n  _s();\n  const [performances, setPerformances] = useState({});\n  const getEventsByGenderAndSeason = () => {\n    if (season === 'indoor') {\n      return ['60m', '200m', '400m', '800m', '1500m', '3000m', gender === 'mens' ? '60mH' : '60mH', 'High Jump', 'Pole Vault', 'Long Jump', 'Triple Jump', 'Shot Put'];\n    }\n    return ['100m', '200m', '400m', '800m', '1500m', '3000m', '5000m', '10000m', gender === 'mens' ? '110mH' : '100mH', '400mH', 'High Jump', 'Pole Vault', 'Long Jump', 'Triple Jump', 'Shot Put', 'Discus Throw', 'Hammer Throw', 'Javelin Throw'];\n  };\n  const calculateEquivalentPerformances = async events => {\n    try {\n      const responses = await Promise.all(events.map(event => {\n        const eventType = EVENT_CODES[event] || event;\n        return fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            event_type: eventType,\n            points: points,\n            gender: gender,\n            season: season\n          })\n        });\n      }));\n      const data = await Promise.all(responses.map(async r => {\n        const result = await r.json();\n        return result;\n      }));\n      const performances = {};\n      events.forEach((event, i) => {\n        performances[event] = data[i].performance;\n      });\n      setPerformances(performances);\n    } catch (error) {\n      console.error('Error calculating equivalent performances:', error);\n    }\n  };\n  useEffect(() => {\n    if (points) {\n      const events = getEventsByGenderAndSeason();\n      calculateEquivalentPerformances(events);\n    }\n  }, [points, gender, season, calculateEquivalentPerformances, getEventsByGenderAndSeason]);\n  if (!points || Object.keys(performances).length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Equivalent Performances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: getEventsByGenderAndSeason().map(event => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatPerformance(performances[event], event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, event, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(EventComparison, \"N5Zyl8NuAXuzVTMef11Jif3TsOE=\");\n_c = EventComparison;\nexport default EventComparison;\nvar _c;\n$RefreshReg$(_c, \"EventComparison\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","EVENT_CODES","EventComparison","points","gender","season","_s","performances","setPerformances","getEventsByGenderAndSeason","calculateEquivalentPerformances","events","responses","Promise","all","map","event","eventType","fetch","method","headers","body","JSON","stringify","event_type","data","r","result","json","forEach","i","performance","error","console","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatPerformance","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst EVENT_CODES = {\n  '60m': '60m',\n  '100m': '100m',\n  '200m': '200m',\n  '400m': '400m',\n  '800m': '800m',\n  '1500m': '1500m',\n  '3000m': '3000m',\n  '5000m': '5000m',\n  '10000m': '10000m',\n  '60mH': '60mH',\n  '100mH': '100mH',\n  '110mH': '110mH',\n  '400mH': '400mH',\n  'High Jump': 'HJ',\n  'Pole Vault': 'PV',\n  'Long Jump': 'LJ',\n  'Triple Jump': 'TJ',\n  'Shot Put': 'SP',\n  'Discus Throw': 'DT',\n  'Hammer Throw': 'HT',\n  'Javelin Throw': 'JT',\n  'Decathlon': 'Decathlon',\n  'Heptathlon': 'Heptathlon',\n  'Pentathlon': 'Pentathlon'\n};\n\nfunction EventComparison({ points, gender, season }) {\n  const [performances, setPerformances] = useState({});\n\n  const getEventsByGenderAndSeason = () => {\n    if (season === 'indoor') {\n      return [\n        '60m',\n        '200m',\n        '400m',\n        '800m',\n        '1500m',\n        '3000m',\n        gender === 'mens' ? '60mH' : '60mH',\n        'High Jump',\n        'Pole Vault',\n        'Long Jump',\n        'Triple Jump',\n        'Shot Put'\n      ];\n    }\n    return [\n      '100m',\n      '200m',\n      '400m',\n      '800m',\n      '1500m',\n      '3000m',\n      '5000m',\n      '10000m',\n      gender === 'mens' ? '110mH' : '100mH',\n      '400mH',\n      'High Jump',\n      'Pole Vault',\n      'Long Jump',\n      'Triple Jump',\n      'Shot Put',\n      'Discus Throw',\n      'Hammer Throw',\n      'Javelin Throw'\n    ];\n  };\n\n  const calculateEquivalentPerformances = async (events) => {\n    try {\n      const responses = await Promise.all(events.map(event => {\n        const eventType = EVENT_CODES[event] || event;\n        return fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            event_type: eventType,\n            points: points,\n            gender: gender,\n            season: season\n          }),\n        });\n      }));\n\n      const data = await Promise.all(responses.map(async (r) => {\n        const result = await r.json();\n        return result;\n      }));\n\n      const performances = {};\n      events.forEach((event, i) => {\n        performances[event] = data[i].performance;\n      });\n      setPerformances(performances);\n    } catch (error) {\n      console.error('Error calculating equivalent performances:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (points) {\n      const events = getEventsByGenderAndSeason();\n      calculateEquivalentPerformances(events);\n    }\n  }, [points, gender, season, calculateEquivalentPerformances, getEventsByGenderAndSeason]);\n\n  if (!points || Object.keys(performances).length === 0) return null;\n\n  return (\n    <div className=\"event-comparison\">\n      <h2>Equivalent Performances</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Event</th>\n            <th>Performance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {getEventsByGenderAndSeason().map(event => (\n            <tr key={event}>\n              <td>{event}</td>\n              <td>{formatPerformance(performances[event], event)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default EventComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}