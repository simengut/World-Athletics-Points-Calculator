{"ast":null,"code":"export const WIND_AFFECTED_EVENTS = ['100m', '200m', '100mH', '110mH', 'LJ', 'TJ'];\nexport const calculateWindModification = (windSpeed, hasWindInfo = true) => {\n  // Handle NWI (No Wind Information) case\n  if (!hasWindInfo) return -30;\n\n  // Convert to number if string\n  windSpeed = Number(windSpeed);\n\n  // No modification between 0 and +2.0\n  if (windSpeed >= 0 && windSpeed <= 2.0) return 0;\n\n  // For values between those in the table, use ±0.6 points for every ±0.1 m/s\n  if (windSpeed < 0) {\n    // Headwind: Add points (positive modification)\n    return Math.round(Math.abs(windSpeed) * 6 * 10) / 10;\n  } else {\n    // Tailwind above 2.0: Subtract points (negative modification)\n    // Calculate from 0.0 but only apply after 2.0\n    const modification = Math.round(windSpeed * 6 * 10) / 10;\n    return -modification;\n  }\n};\n\n// Optional: Reference table for documentation\nexport const WIND_REFERENCE_TABLE = {\n  '-5.0': 30,\n  // Headwind adds points\n  '-4.0': 24,\n  '-3.0': 18,\n  '-2.0': 12,\n  '-1.0': 6,\n  '0.0': 0,\n  '2.0': 0,\n  // No modification between 0 and +2.0\n  '2.1': -12.6,\n  // Starts deducting from here\n  '3.0': -18,\n  '4.0': -24,\n  '5.0': -30\n};","map":{"version":3,"names":["WIND_AFFECTED_EVENTS","calculateWindModification","windSpeed","hasWindInfo","Number","Math","round","abs","modification","WIND_REFERENCE_TABLE"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/utils/windModification.js"],"sourcesContent":["export const WIND_AFFECTED_EVENTS = [\n  '100m', '200m', '100mH', '110mH', 'LJ', 'TJ'\n];\n\nexport const calculateWindModification = (windSpeed, hasWindInfo = true) => {\n  // Handle NWI (No Wind Information) case\n  if (!hasWindInfo) return -30;\n\n  // Convert to number if string\n  windSpeed = Number(windSpeed);\n\n  // No modification between 0 and +2.0\n  if (windSpeed >= 0 && windSpeed <= 2.0) return 0;\n\n  // For values between those in the table, use ±0.6 points for every ±0.1 m/s\n  if (windSpeed < 0) {\n    // Headwind: Add points (positive modification)\n    return Math.round((Math.abs(windSpeed) * 6) * 10) / 10;\n  } else {\n    // Tailwind above 2.0: Subtract points (negative modification)\n    // Calculate from 0.0 but only apply after 2.0\n    const modification = Math.round((windSpeed * 6) * 10) / 10;\n    return -modification;\n  }\n};\n\n// Optional: Reference table for documentation\nexport const WIND_REFERENCE_TABLE = {\n  '-5.0': 30,   // Headwind adds points\n  '-4.0': 24,\n  '-3.0': 18,\n  '-2.0': 12,\n  '-1.0': 6,\n  '0.0': 0,\n  '2.0': 0,     // No modification between 0 and +2.0\n  '2.1': -12.6, // Starts deducting from here\n  '3.0': -18,\n  '4.0': -24,\n  '5.0': -30\n}; "],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAClC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAC7C;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CAACC,SAAS,EAAEC,WAAW,GAAG,IAAI,KAAK;EAC1E;EACA,IAAI,CAACA,WAAW,EAAE,OAAO,CAAC,EAAE;;EAE5B;EACAD,SAAS,GAAGE,MAAM,CAACF,SAAS,CAAC;;EAE7B;EACA,IAAIA,SAAS,IAAI,CAAC,IAAIA,SAAS,IAAI,GAAG,EAAE,OAAO,CAAC;;EAEhD;EACA,IAAIA,SAAS,GAAG,CAAC,EAAE;IACjB;IACA,OAAOG,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,GAAG,CAACL,SAAS,CAAC,GAAG,CAAC,GAAI,EAAE,CAAC,GAAG,EAAE;EACxD,CAAC,MAAM;IACL;IACA;IACA,MAAMM,YAAY,GAAGH,IAAI,CAACC,KAAK,CAAEJ,SAAS,GAAG,CAAC,GAAI,EAAE,CAAC,GAAG,EAAE;IAC1D,OAAO,CAACM,YAAY;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAG;EAClC,MAAM,EAAE,EAAE;EAAI;EACd,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,CAAC;EACT,KAAK,EAAE,CAAC;EACR,KAAK,EAAE,CAAC;EAAM;EACd,KAAK,EAAE,CAAC,IAAI;EAAE;EACd,KAAK,EAAE,CAAC,EAAE;EACV,KAAK,EAAE,CAAC,EAAE;EACV,KAAK,EAAE,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}