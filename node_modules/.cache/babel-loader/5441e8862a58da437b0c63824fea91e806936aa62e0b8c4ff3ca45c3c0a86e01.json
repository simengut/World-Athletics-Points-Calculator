{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/CompetitionTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Form from './components/CalculatorForm/Form';\nimport WindAdjustment from './components/CalculatorForm/WindAdjustment';\nimport ResultsDisplay from './components/CalculatorForm/ResultsDisplay';\nimport { needsWindInput, calculateWindModification } from './utils/windModification';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { formatTimeInput } from './utils/formatters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionTable({\n  points: initialPoints,\n  eventType: initialEventType,\n  onCalculatePerformance\n}) {\n  _s();\n  // Calculator state\n  const [mode, setMode] = useState('points');\n  const [gender, setGender] = useState('mens');\n  const [season, setSeason] = useState('outdoor');\n  const [eventType, setEventType] = useState(initialEventType || '100m');\n  const [performance, setPerformance] = useState('');\n  const [points, setPoints] = useState(initialPoints || null);\n  const [windSpeed, setWindSpeed] = useState('');\n  const [adjustedPoints, setAdjustedPoints] = useState(null);\n  const [showWind, setShowWind] = useState(false);\n\n  // Competition table state\n  const [basePoints, setBasePoints] = useState('');\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const calculate = async () => {\n    try {\n      if (mode === 'points') {\n        const formattedPerformance = formatTimeInput(performance, eventType);\n        if (['800m', '1500m', '3000m', '5000m', '10000m'].includes(eventType) && !formattedPerformance) {\n          console.error('Invalid time format');\n          return;\n        }\n        const response = await fetch('http://localhost:5001/api/calculate-points', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            event_type: EVENT_CODES[eventType] || eventType,\n            performance: formattedPerformance || performance,\n            gender: gender,\n            season: season\n          })\n        });\n        const data = await response.json();\n        const basePoints = Math.round(data.points);\n        setPoints(basePoints);\n        setBasePoints(basePoints);\n        if (season === 'outdoor' && needsWindInput(eventType, season) && windSpeed) {\n          const windAdjustment = calculateWindModification(eventType, parseFloat(windSpeed), basePoints);\n          setAdjustedPoints(Math.round(basePoints + windAdjustment));\n        } else {\n          setAdjustedPoints(basePoints);\n        }\n      } else {\n        // Points to Performance calculation\n        const response = await fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            event_type: EVENT_CODES[eventType] || eventType,\n            points: Number(points),\n            gender: gender,\n            season: season\n          })\n        });\n        const data = await response.json();\n        setPerformance(data.performance.toFixed(2));\n        setBasePoints(Number(points));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"competition-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"competition-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-form\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          mode: mode,\n          setMode: setMode,\n          gender: gender,\n          setGender: setGender,\n          season: season,\n          setSeason: setSeason,\n          eventType: eventType,\n          setEventType: setEventType,\n          performance: performance,\n          setPerformance: setPerformance,\n          points: points,\n          setPoints: setPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), mode === 'points' && season === 'outdoor' && needsWindInput(eventType, season) && /*#__PURE__*/_jsxDEV(WindAdjustment, {\n          eventType: eventType,\n          windSpeed: windSpeed,\n          setWindSpeed: setWindSpeed,\n          showWind: showWind,\n          setShowWind: setShowWind\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"calculate-button\",\n          onClick: calculate,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n          mode: mode,\n          points: points,\n          performance: performance,\n          eventType: eventType,\n          windSpeed: windSpeed,\n          adjustedPoints: adjustedPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"competition-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"competition-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"baseline-settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Competition Level Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Base Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: basePoints,\n                onChange: e => setBasePoints(Number(e.target.value)),\n                placeholder: \"Enter points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meet Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: baseMeet,\n                onChange: e => setBaseMeet(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"No bonus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: meet,\n                  children: MEET_LABELS[meet]\n                }, meet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), baseMeet && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: basePlace,\n                onChange: e => setBasePlace(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select place\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), Object.keys(COMPETITION_POINTS[baseMeet]).map(place => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: place,\n                  children: place\n                }, place, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tables-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Points (Performance + Placement)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equivalency-table\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Place\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 23\n                    }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: MEET_LABELS[meet]\n                    }, meet, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [...Array(16)].map((_, index) => {\n                    const place = index + 1;\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: place\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 27\n                      }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: COMPETITION_POINTS[meet][place] ? getEquivalentPoints(meet, place) : '-'\n                      }, meet, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 29\n                      }, this))]\n                    }, place, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Required Performances for Equivalent Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equivalency-table\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Place\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 23\n                    }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: MEET_LABELS[meet]\n                    }, meet, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 25\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [...Array(16)].map((_, index) => {\n                    const place = index + 1;\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: place\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 27\n                      }, this), Object.keys(MEET_LABELS).map(meet => {\n                        var _equivalentPerformanc, _equivalentPerformanc2, _equivalentPerformanc3;\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_equivalentPerformanc = (_equivalentPerformanc2 = equivalentPerformances) === null || _equivalentPerformanc2 === void 0 ? void 0 : (_equivalentPerformanc3 = _equivalentPerformanc2[meet]) === null || _equivalentPerformanc3 === void 0 ? void 0 : _equivalentPerformanc3[place]) !== null && _equivalentPerformanc !== void 0 ? _equivalentPerformanc : '-'\n                        }, meet, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 29\n                        }, this);\n                      })]\n                    }, place, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionTable, \"+YqkJ/bLCpBZaMirTXWTyQ55XnA=\");\n_c = CompetitionTable;\nexport default CompetitionTable;\nvar _c;\n$RefreshReg$(_c, \"CompetitionTable\");","map":{"version":3,"names":["useState","useEffect","Form","WindAdjustment","ResultsDisplay","needsWindInput","calculateWindModification","EVENT_CODES","formatTimeInput","jsxDEV","_jsxDEV","CompetitionTable","points","initialPoints","eventType","initialEventType","onCalculatePerformance","_s","mode","setMode","gender","setGender","season","setSeason","setEventType","performance","setPerformance","setPoints","windSpeed","setWindSpeed","adjustedPoints","setAdjustedPoints","showWind","setShowWind","basePoints","setBasePoints","baseMeet","setBaseMeet","basePlace","setBasePlace","calculate","formattedPerformance","includes","console","error","response","fetch","method","headers","body","JSON","stringify","event_type","data","json","Math","round","windAdjustment","parseFloat","Number","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","Object","keys","MEET_LABELS","map","meet","COMPETITION_POINTS","place","Array","_","index","getEquivalentPoints","_equivalentPerformanc","_equivalentPerformanc2","_equivalentPerformanc3","equivalentPerformances","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/CompetitionTable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Form from './components/CalculatorForm/Form';\nimport WindAdjustment from './components/CalculatorForm/WindAdjustment';\nimport ResultsDisplay from './components/CalculatorForm/ResultsDisplay';\nimport { needsWindInput, calculateWindModification } from './utils/windModification';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { formatTimeInput } from './utils/formatters';\n\nfunction CompetitionTable({ points: initialPoints, eventType: initialEventType, onCalculatePerformance }) {\n  // Calculator state\n  const [mode, setMode] = useState('points');\n  const [gender, setGender] = useState('mens');\n  const [season, setSeason] = useState('outdoor');\n  const [eventType, setEventType] = useState(initialEventType || '100m');\n  const [performance, setPerformance] = useState('');\n  const [points, setPoints] = useState(initialPoints || null);\n  const [windSpeed, setWindSpeed] = useState('');\n  const [adjustedPoints, setAdjustedPoints] = useState(null);\n  const [showWind, setShowWind] = useState(false);\n\n  // Competition table state\n  const [basePoints, setBasePoints] = useState('');\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n\n  const calculate = async () => {\n    try {\n      if (mode === 'points') {\n        const formattedPerformance = formatTimeInput(performance, eventType);\n        if (['800m', '1500m', '3000m', '5000m', '10000m'].includes(eventType) && !formattedPerformance) {\n          console.error('Invalid time format');\n          return;\n        }\n\n        const response = await fetch('http://localhost:5001/api/calculate-points', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            event_type: EVENT_CODES[eventType] || eventType,\n            performance: formattedPerformance || performance,\n            gender: gender,\n            season: season\n          }),\n        });\n        const data = await response.json();\n        const basePoints = Math.round(data.points);\n        setPoints(basePoints);\n        setBasePoints(basePoints);\n\n        if (season === 'outdoor' && needsWindInput(eventType, season) && windSpeed) {\n          const windAdjustment = calculateWindModification(\n            eventType,\n            parseFloat(windSpeed),\n            basePoints\n          );\n          setAdjustedPoints(Math.round(basePoints + windAdjustment));\n        } else {\n          setAdjustedPoints(basePoints);\n        }\n      } else {\n        // Points to Performance calculation\n        const response = await fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            event_type: EVENT_CODES[eventType] || eventType,\n            points: Number(points),\n            gender: gender,\n            season: season\n          }),\n        });\n        const data = await response.json();\n        setPerformance(data.performance.toFixed(2));\n        setBasePoints(Number(points));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"competition-page\">\n      <div className=\"competition-sidebar\">\n        <div className=\"calculator-form\">\n          <Form\n            mode={mode}\n            setMode={setMode}\n            gender={gender}\n            setGender={setGender}\n            season={season}\n            setSeason={setSeason}\n            eventType={eventType}\n            setEventType={setEventType}\n            performance={performance}\n            setPerformance={setPerformance}\n            points={points}\n            setPoints={setPoints}\n          />\n          {mode === 'points' && season === 'outdoor' && needsWindInput(eventType, season) && (\n            <WindAdjustment\n              eventType={eventType}\n              windSpeed={windSpeed}\n              setWindSpeed={setWindSpeed}\n              showWind={showWind}\n              setShowWind={setShowWind}\n            />\n          )}\n          <button className=\"calculate-button\" onClick={calculate}>\n            Calculate\n          </button>\n          <ResultsDisplay \n            mode={mode}\n            points={points}\n            performance={performance}\n            eventType={eventType}\n            windSpeed={windSpeed}\n            adjustedPoints={adjustedPoints}\n          />\n        </div>\n      </div>\n      <div className=\"competition-main\">\n        <div className=\"competition-table\">\n          <div className=\"baseline-settings\">\n            <h2>Competition Level Comparison</h2>\n            <div className=\"settings-grid\">\n              <div className=\"setting-group\">\n                <label>Base Points</label>\n                <input\n                  type=\"number\"\n                  value={basePoints}\n                  onChange={(e) => setBasePoints(Number(e.target.value))}\n                  placeholder=\"Enter points\"\n                />\n              </div>\n              <div className=\"setting-group\">\n                <label>Meet Level</label>\n                <select value={baseMeet} onChange={(e) => setBaseMeet(e.target.value)}>\n                  <option value=\"\">No bonus</option>\n                  {Object.keys(MEET_LABELS).map(meet => (\n                    <option key={meet} value={meet}>{MEET_LABELS[meet]}</option>\n                  ))}\n                </select>\n              </div>\n              {baseMeet && (\n                <div className=\"setting-group\">\n                  <label>Place</label>\n                  <select value={basePlace} onChange={(e) => setBasePlace(e.target.value)}>\n                    <option value=\"\">Select place</option>\n                    {Object.keys(COMPETITION_POINTS[baseMeet]).map(place => (\n                      <option key={place} value={place}>{place}</option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"tables-container\">\n            {/* Total Points Table */}\n            <div className=\"table-section\">\n              <h3>Total Points (Performance + Placement)</h3>\n              <div className=\"equivalency-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Place</th>\n                      {Object.keys(MEET_LABELS).map(meet => (\n                        <th key={meet}>{MEET_LABELS[meet]}</th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {[...Array(16)].map((_, index) => {\n                      const place = index + 1;\n                      return (\n                        <tr key={place}>\n                          <td>{place}</td>\n                          {Object.keys(MEET_LABELS).map(meet => (\n                            <td key={meet}>\n                              {COMPETITION_POINTS[meet][place] \n                                ? getEquivalentPoints(meet, place)\n                                : '-'}\n                            </td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* Required Performances Table */}\n            <div className=\"table-section\">\n              <h3>Required Performances for Equivalent Points</h3>\n              <div className=\"equivalency-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Place</th>\n                      {Object.keys(MEET_LABELS).map(meet => (\n                        <th key={meet}>{MEET_LABELS[meet]}</th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {[...Array(16)].map((_, index) => {\n                      const place = index + 1;\n                      return (\n                        <tr key={place}>\n                          <td>{place}</td>\n                          {Object.keys(MEET_LABELS).map(meet => (\n                            <td key={meet}>\n                              {equivalentPerformances?.[meet]?.[place] ?? '-'}\n                            </td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompetitionTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}