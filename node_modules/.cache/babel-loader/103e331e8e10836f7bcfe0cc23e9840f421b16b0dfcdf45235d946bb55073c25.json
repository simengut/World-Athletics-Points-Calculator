{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/WorldAthleticsCalculator/iaaf-frontend/src/CompetitionTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS, SPECIAL_EVENTS, SPECIAL_EVENTS_POINTS } from './utils/competitionPoints';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { calculatePerformancesBatch } from './utils/calculators';\n\n// New Row component to handle the API calls\n// function TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n//   const [performances, setPerformances] = useState({});\n//\n//   useEffect(() => {\n//     const fetchPerformances = async () => {\n//       if (targetTotal) {\n//         try {\n//           const response = await fetch('http://localhost:5001/api/calculate-performances-batch', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               base_points: targetTotal,\n//               event_type: eventType,\n//               gender: gender,\n//               season: season\n//             }),\n//           });\n//           \n//           const data = await response.json();\n//           if (data.performances) {\n//             setPerformances(data.performances);\n//           }\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       } else {\n//         setPerformances({});\n//       }\n//     };\n//\n//     fetchPerformances();\n//   }, [targetTotal, eventType, gender, season]);\n//\n//   return (\n//     <tr>\n//       <td>{place}</td>\n//       {Object.keys(MEET_LABELS).map(meet => (\n//         <td key={meet}>\n//           {COMPETITION_POINTS[meet][place] ? \n//             formatPerformance(performances[meet]?.[place], eventType) || '-' \n//             : '-'}\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// Helper function to get the last scoring place for a meet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLastScoringPlace = meet => {\n  return Math.max(...Object.keys(COMPETITION_POINTS[meet]).map(Number)) + 1;\n};\n\n// Main CompetitionTable component\nfunction CompetitionTable({\n  points,\n  eventType,\n  gender,\n  season\n}) {\n  _s();\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const [performances, setPerformances] = useState({});\n\n  // Calculate equivalent performances when points or base selections change\n  useEffect(() => {\n    const calculateEquivalentPerformances = () => {\n      if (!points) return;\n      const basePoints = baseMeet && basePlace ? basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace] : points;\n      const newPerformances = calculatePerformancesBatch(basePoints, EVENT_CODES[eventType] || eventType, gender, season);\n      setPerformances(newPerformances);\n    };\n    calculateEquivalentPerformances();\n  }, [points, eventType, gender, season, baseMeet, basePlace]);\n  if (!points) return null;\n  const getPoints = (basePoints, meet, place) => {\n    const pointsTable = SPECIAL_EVENTS.includes(eventType) ? SPECIAL_EVENTS_POINTS : COMPETITION_POINTS;\n    return pointsTable[meet][place] ? basePoints + pointsTable[meet][place] : '-';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"competition-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Competition Level Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Base Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-display\",\n          children: points || 'Enter points'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meet Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: baseMeet,\n          onChange: e => setBaseMeet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"No bonus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: meet,\n            children: MEET_LABELS[meet]\n          }, meet, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), baseMeet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: basePlace,\n          onChange: e => setBasePlace(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), Object.keys(COMPETITION_POINTS[baseMeet]).map(place => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: place,\n            children: place\n          }, place, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: [getLastScoringPlace(baseMeet), \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), baseMeet && basePlace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Total Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-breakdown\",\n          children: [points, \" + \", basePlace === 'other' ? '0' : COMPETITION_POINTS[baseMeet][basePlace], \" = \", basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Required Performances for Equivalent Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => {\n                  var _performances$meet, _performances$meet2;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ((_performances$meet = performances[meet]) === null || _performances$meet === void 0 ? void 0 : _performances$meet[place]) === 'NaN' ? 'NaN' : (_performances$meet2 = performances[meet]) !== null && _performances$meet2 !== void 0 && _performances$meet2[place] ? formatPerformance(performances[meet][place], eventType) : '-'\n                  }, meet, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total Points (Performance + Placement)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: points ? getPoints(points, meet, place) : '-'\n                }, meet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this))]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionTable, \"q7ReJ0XLLEtXK3XgzodLqU8aejc=\");\n_c = CompetitionTable;\nexport default CompetitionTable;\nvar _c;\n$RefreshReg$(_c, \"CompetitionTable\");","map":{"version":3,"names":["useState","useEffect","formatPerformance","COMPETITION_POINTS","MEET_LABELS","SPECIAL_EVENTS","SPECIAL_EVENTS_POINTS","EVENT_CODES","calculatePerformancesBatch","jsxDEV","_jsxDEV","getLastScoringPlace","meet","Math","max","Object","keys","map","Number","CompetitionTable","points","eventType","gender","season","_s","baseMeet","setBaseMeet","basePlace","setBasePlace","performances","setPerformances","calculateEquivalentPerformances","basePoints","newPerformances","getPoints","place","pointsTable","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Array","_","index","_performances$meet","_performances$meet2","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/WorldAthleticsCalculator/iaaf-frontend/src/CompetitionTable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS, SPECIAL_EVENTS, SPECIAL_EVENTS_POINTS } from './utils/competitionPoints';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { calculatePerformancesBatch } from './utils/calculators';\n\n// New Row component to handle the API calls\n// function TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n//   const [performances, setPerformances] = useState({});\n//\n//   useEffect(() => {\n//     const fetchPerformances = async () => {\n//       if (targetTotal) {\n//         try {\n//           const response = await fetch('http://localhost:5001/api/calculate-performances-batch', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               base_points: targetTotal,\n//               event_type: eventType,\n//               gender: gender,\n//               season: season\n//             }),\n//           });\n//           \n//           const data = await response.json();\n//           if (data.performances) {\n//             setPerformances(data.performances);\n//           }\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       } else {\n//         setPerformances({});\n//       }\n//     };\n//\n//     fetchPerformances();\n//   }, [targetTotal, eventType, gender, season]);\n//\n//   return (\n//     <tr>\n//       <td>{place}</td>\n//       {Object.keys(MEET_LABELS).map(meet => (\n//         <td key={meet}>\n//           {COMPETITION_POINTS[meet][place] ? \n//             formatPerformance(performances[meet]?.[place], eventType) || '-' \n//             : '-'}\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// Helper function to get the last scoring place for a meet\nconst getLastScoringPlace = (meet) => {\n  return Math.max(...Object.keys(COMPETITION_POINTS[meet]).map(Number)) + 1;\n};\n\n// Main CompetitionTable component\nfunction CompetitionTable({ points, eventType, gender, season }) {\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const [performances, setPerformances] = useState({});\n\n  // Calculate equivalent performances when points or base selections change\n  useEffect(() => {\n    const calculateEquivalentPerformances = () => {\n      if (!points) return;\n\n      const basePoints = baseMeet && basePlace ? \n        (basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace]) : \n        points;\n\n      const newPerformances = calculatePerformancesBatch(\n        basePoints,\n        EVENT_CODES[eventType] || eventType,\n        gender,\n        season\n      );\n      \n      setPerformances(newPerformances);\n    };\n\n    calculateEquivalentPerformances();\n  }, [points, eventType, gender, season, baseMeet, basePlace]);\n\n  if (!points) return null;\n\n  const getPoints = (basePoints, meet, place) => {\n    const pointsTable = SPECIAL_EVENTS.includes(eventType) ? SPECIAL_EVENTS_POINTS : COMPETITION_POINTS;\n    return pointsTable[meet][place] ? (basePoints + pointsTable[meet][place]) : '-';\n  };\n\n  return (\n    <div className=\"competition-table\">\n      <h2>Competition Level Comparison</h2>\n\n      {/* Base Meet Selection */}\n      <div className=\"settings-grid\">\n        <div className=\"setting-group\">\n          <label>Base Points</label>\n          <div className=\"points-display\">\n            {points || 'Enter points'}\n          </div>\n        </div>\n        <div className=\"setting-group\">\n          <label>Meet Level</label>\n          <select value={baseMeet} onChange={(e) => setBaseMeet(e.target.value)}>\n            <option value=\"\">No bonus</option>\n            {Object.keys(MEET_LABELS).map(meet => (\n              <option key={meet} value={meet}>{MEET_LABELS[meet]}</option>\n            ))}\n          </select>\n        </div>\n        {baseMeet && (\n          <div className=\"setting-group\">\n            <label>Place</label>\n            <select value={basePlace} onChange={(e) => setBasePlace(e.target.value)}>\n              <option value=\"\">Select place</option>\n              {Object.keys(COMPETITION_POINTS[baseMeet]).map(place => (\n                <option key={place} value={place}>{place}</option>\n              ))}\n              <option value=\"other\">{getLastScoringPlace(baseMeet)}+</option>\n            </select>\n          </div>\n        )}\n        {baseMeet && basePlace && (\n          <div className=\"setting-group\">\n            <label>Total Points</label>\n            <div className=\"points-breakdown\">\n              {points} + {basePlace === 'other' ? '0' : COMPETITION_POINTS[baseMeet][basePlace]} = {\n                basePlace === 'other' ? \n                points : \n                points + COMPETITION_POINTS[baseMeet][basePlace]\n              }\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Required Performances Table */}\n      <div className=\"table-section\">\n        <h3>Required Performances for Equivalent Points</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {performances[meet]?.[place] === 'NaN' ? \n                          'NaN' : \n                          (performances[meet]?.[place] ? \n                            formatPerformance(performances[meet][place], eventType) : \n                            '-'\n                          )}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Total Points Table */}\n      <div className=\"table-section\">\n        <h3>Total Points (Performance + Placement)</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {points ? getPoints(points, meet, place) : '-'}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompetitionTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}