{"ast":null,"code":"export const WIND_AFFECTED_EVENTS = ['100m', '200m', '100mH', '110mH', 'LJ', 'TJ'];\nexport const calculateWindModification = (windSpeed, hasWindInfo = true) => {\n  // Handle NWI (No Wind Information) case\n  if (!hasWindInfo || windSpeed === '' || windSpeed === null || isNaN(windSpeed)) {\n    return -30;\n  }\n\n  // Convert to number if string and ensure it's a valid number\n  const wind = Number(windSpeed);\n  if (isNaN(wind)) {\n    return 0;\n  }\n\n  // For tailwind (positive values)\n  if (wind >= 0) {\n    if (wind <= 2.0) {\n      return 0; // No modification for tailwind up to +2.0 m/s\n    } else {\n      // Calculate deduction for tailwind above 2.0 m/s\n      return Math.round(-(wind * 6));\n    }\n  }\n\n  // For headwind (negative values)\n  return Math.round(Math.abs(wind) * 6);\n};\n\n// Reference table matching the official specification\nexport const WIND_REFERENCE_TABLE = {\n  '+4.0': -24,\n  '+3.0': -18,\n  '+2.0': 0,\n  '+1.0': 0,\n  '0.0': 0,\n  '-1.0': 6,\n  '-2.0': 12,\n  '-3.0': 18,\n  '-4.0': 24\n};","map":{"version":3,"names":["WIND_AFFECTED_EVENTS","calculateWindModification","windSpeed","hasWindInfo","isNaN","wind","Number","Math","round","abs","WIND_REFERENCE_TABLE"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/utils/windModification.js"],"sourcesContent":["export const WIND_AFFECTED_EVENTS = [\n  '100m', '200m', '100mH', '110mH', 'LJ', 'TJ'\n];\n\nexport const calculateWindModification = (windSpeed, hasWindInfo = true) => {\n  // Handle NWI (No Wind Information) case\n  if (!hasWindInfo || windSpeed === '' || windSpeed === null || isNaN(windSpeed)) {\n    return -30;\n  }\n\n  // Convert to number if string and ensure it's a valid number\n  const wind = Number(windSpeed);\n  if (isNaN(wind)) {\n    return 0;\n  }\n\n  // For tailwind (positive values)\n  if (wind >= 0) {\n    if (wind <= 2.0) {\n      return 0;  // No modification for tailwind up to +2.0 m/s\n    } else {\n      // Calculate deduction for tailwind above 2.0 m/s\n      return Math.round(-(wind * 6));\n    }\n  }\n  \n  // For headwind (negative values)\n  return Math.round(Math.abs(wind) * 6);\n};\n\n// Reference table matching the official specification\nexport const WIND_REFERENCE_TABLE = {\n  '+4.0': -24,\n  '+3.0': -18,\n  '+2.0': 0,\n  '+1.0': 0,\n  '0.0': 0,\n  '-1.0': 6,\n  '-2.0': 12,\n  '-3.0': 18,\n  '-4.0': 24\n}; "],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAClC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAC7C;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CAACC,SAAS,EAAEC,WAAW,GAAG,IAAI,KAAK;EAC1E;EACA,IAAI,CAACA,WAAW,IAAID,SAAS,KAAK,EAAE,IAAIA,SAAS,KAAK,IAAI,IAAIE,KAAK,CAACF,SAAS,CAAC,EAAE;IAC9E,OAAO,CAAC,EAAE;EACZ;;EAEA;EACA,MAAMG,IAAI,GAAGC,MAAM,CAACJ,SAAS,CAAC;EAC9B,IAAIE,KAAK,CAACC,IAAI,CAAC,EAAE;IACf,OAAO,CAAC;EACV;;EAEA;EACA,IAAIA,IAAI,IAAI,CAAC,EAAE;IACb,IAAIA,IAAI,IAAI,GAAG,EAAE;MACf,OAAO,CAAC,CAAC,CAAE;IACb,CAAC,MAAM;MACL;MACA,OAAOE,IAAI,CAACC,KAAK,CAAC,EAAEH,IAAI,GAAG,CAAC,CAAC,CAAC;IAChC;EACF;;EAEA;EACA,OAAOE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAMK,oBAAoB,GAAG;EAClC,MAAM,EAAE,CAAC,EAAE;EACX,MAAM,EAAE,CAAC,EAAE;EACX,MAAM,EAAE,CAAC;EACT,MAAM,EAAE,CAAC;EACT,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,MAAM,EAAE;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}