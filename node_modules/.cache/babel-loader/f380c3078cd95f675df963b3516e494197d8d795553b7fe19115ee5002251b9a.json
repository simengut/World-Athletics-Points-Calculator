{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CompetitionTable from './CompetitionTable';\nimport { WIND_AFFECTED_EVENTS, calculateWindModification } from './utils/windModification';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [eventType, setEventType] = useState('100m');\n  const [performance, setPerformance] = useState('');\n  const [points, setPoints] = useState(null);\n  const [season, setSeason] = useState('outdoor');\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState('performance'); // 'performance' or 'points' mode\n  const [equivalentResults, setEquivalentResults] = useState(null);\n  const [gender, setGender] = useState('mens');\n  const [activeTab, setActiveTab] = useState('calculator');\n  const [windSpeed, setWindSpeed] = useState('');\n  const [hasWindInfo, setHasWindInfo] = useState(true);\n\n  // Separate events for indoor and outdoor\n  const events = {\n    outdoor: {\n      'Sprint Events': ['100m', '200m', '300m', '400m', '500m'],\n      'Middle Distance': ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m'],\n      'Long Distance': ['2Miles', '5000m', '10000m', '5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km'],\n      'Hurdles': ['110mH', '400mH'],\n      'Steeplechase': ['2000mSC', '3000mSC'],\n      'Jumps': ['HJ', 'PV', 'LJ', 'TJ'],\n      'Throws': ['SP', 'DT', 'HT', 'JT'],\n      'Combined': ['Decathlon']\n    },\n    indoor: {\n      'Sprint Events': ['50m', '55m', '60m', '200m', '300m', '400m', '500m'],\n      'Hurdles': ['50mH', '55mH', '60mH'],\n      'Middle Distance': ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m'],\n      'Long Distance': ['2Miles', '5000m'],\n      'Jumps': ['HJ', 'PV', 'LJ', 'TJ'],\n      'Throws': ['SP'],\n      'Combined': ['Heptathlon']\n    }\n  };\n\n  // Reset event type when season changes\n  useEffect(() => {\n    const availableEvents = Object.values(events[season]).flat();\n    if (!availableEvents.includes(eventType)) {\n      setEventType(availableEvents[0]);\n    }\n  }, [season, eventType, events]);\n  const calculateEquivalents = async pointsValue => {\n    if (!pointsValue) return;\n    const results = {};\n    for (const categoryEvents of Object.values(events[season])) {\n      for (const event of categoryEvents) {\n        try {\n          const response = await fetch('http://localhost:5001/api/calculate-performance', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              event_type: event,\n              points: pointsValue,\n              season: season\n            })\n          });\n          const data = await response.json();\n          if (!data.error) {\n            results[event] = data.performance;\n          }\n        } catch (error) {\n          console.error(`Error calculating for ${event}:`, error);\n        }\n      }\n    }\n    setEquivalentResults(results);\n  };\n  const calculate = async () => {\n    try {\n      if (mode === 'points') {\n        // Performance to Points calculation\n        const response = await fetch('http://localhost:5001/api/calculate-points', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            event_type: eventType,\n            performance: performance,\n            gender: gender,\n            season: season\n          })\n        });\n        const data = await response.json();\n        setPoints(Math.round(data.points));\n      } else {\n        // Points to Performance calculation\n        const response = await fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            event_type: eventType,\n            points: points,\n            gender: gender,\n            season: season\n          })\n        });\n        const data = await response.json();\n        setPerformance(data.performance);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const calculatePerformance = async (points, eventType) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/calculate-performance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          event_type: eventType,\n          points: points,\n          season: season\n        })\n      });\n      const data = await response.json();\n      return data.performance;\n    } catch (error) {\n      console.error('Error calculating performance:', error);\n      return null;\n    }\n  };\n  const getPlaceholder = () => {\n    if (eventType.includes('Jump')) return 'Enter height/distance (m)';\n    if (eventType.includes('Vault')) return 'Enter height/distance (m)';\n    if (eventType.includes('Put') || eventType.includes('Throw') || eventType.includes('Discus') || eventType.includes('Hammer')) return 'Enter distance (m)';\n    return 'Enter time (seconds)';\n  };\n  const formatPerformance = (value, event) => {\n    // Events that need time formatting (longer than 400m)\n    const timeEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', '2Miles', '5000m', '10000m', '5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km', '2000mSC', '3000mSC'];\n    if (!timeEvents.includes(event)) {\n      return value;\n    }\n\n    // Convert to seconds\n    const totalSeconds = parseFloat(value);\n\n    // Calculate hours, minutes, seconds, and milliseconds\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = Math.floor(totalSeconds % 60);\n    const milliseconds = Math.round(totalSeconds % 1 * 100);\n\n    // Format based on duration\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n    } else if (minutes > 0) {\n      return `${minutes}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n    } else {\n      return `${seconds}.${milliseconds.toString().padStart(2, '0')}`;\n    }\n  };\n  const formatInputValue = (value, event) => {\n    // Field events: allow only numbers with up to 2 decimal places\n    const fieldEvents = ['HJ', 'PV', 'LJ', 'TJ', 'SP', 'DT', 'HT', 'JT'];\n\n    // Sprint events: allow ss.ms format\n    const sprintEvents = ['50m', '55m', '60m', '100m', '200m', '300m', '400m', '50mH', '55mH', '60mH', '110mH', '400mH'];\n\n    // Distance events: allow mm:ss.ms format\n    const distanceEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', '2Miles', '5000m', '10000m', '2000mSC', '3000mSC'];\n\n    // Marathon and ultra: allow hh:mm:ss.ms format\n    const ultraEvents = ['5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km'];\n    if (fieldEvents.includes(event)) {\n      var _parts$;\n      // Remove any non-numeric characters except decimal point\n      value = value.replace(/[^\\d.]/g, '');\n      // Ensure only one decimal point\n      const parts = value.split('.');\n      if (parts.length > 2) value = parts[0] + '.' + parts[1];\n      // Limit to 2 decimal places\n      if (((_parts$ = parts[1]) === null || _parts$ === void 0 ? void 0 : _parts$.length) > 2) value = parts[0] + '.' + parts[1].slice(0, 2);\n    } else if (sprintEvents.includes(event)) {\n      var _parts$2;\n      // Format as ss.ms\n      value = value.replace(/[^\\d.]/g, '');\n      const parts = value.split('.');\n      if (parts.length > 2) value = parts[0] + '.' + parts[1];\n      if (((_parts$2 = parts[1]) === null || _parts$2 === void 0 ? void 0 : _parts$2.length) > 2) value = parts[0] + '.' + parts[1].slice(0, 2);\n    } else if (distanceEvents.includes(event)) {\n      // Format as mm:ss.ms\n      value = value.replace(/[^\\d:.]/, '');\n      const parts = value.split(':');\n      if (parts.length > 2) {\n        value = parts[0] + ':' + parts[1];\n      }\n      if (parts[1]) {\n        var _secParts$;\n        const secParts = parts[1].split('.');\n        if (secParts.length > 2) {\n          value = parts[0] + ':' + secParts[0] + '.' + secParts[1];\n        }\n        if (((_secParts$ = secParts[1]) === null || _secParts$ === void 0 ? void 0 : _secParts$.length) > 2) {\n          value = parts[0] + ':' + secParts[0] + '.' + secParts[1].slice(0, 2);\n        }\n      }\n    } else if (ultraEvents.includes(event)) {\n      // Format as hh:mm:ss.ms\n      value = value.replace(/[^\\d:.]/, '');\n      const parts = value.split(':');\n      if (parts.length > 3) {\n        value = parts[0] + ':' + parts[1] + ':' + parts[2];\n      }\n      if (parts[2]) {\n        var _secParts$2;\n        const secParts = parts[2].split('.');\n        if (secParts.length > 2) {\n          value = `${parts[0]}:${parts[1]}:${secParts[0]}.${secParts[1]}`;\n        }\n        if (((_secParts$2 = secParts[1]) === null || _secParts$2 === void 0 ? void 0 : _secParts$2.length) > 2) {\n          value = `${parts[0]}:${parts[1]}:${secParts[0]}.${secParts[1].slice(0, 2)}`;\n        }\n      }\n    }\n    return value;\n  };\n  const parsePerformanceValue = (value, event) => {\n    if (!value) return null;\n    const ultraEvents = ['5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km'];\n    const distanceEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', '2Miles', '5000m', '10000m', '2000mSC', '3000mSC'];\n    if (ultraEvents.includes(event) || distanceEvents.includes(event)) {\n      const parts = value.split(':');\n      if (parts.length === 3) {\n        // hh:mm:ss.ms\n        const [hours, minutes, seconds] = parts;\n        return parseInt(hours) * 3600 + parseInt(minutes) * 60 + parseFloat(seconds);\n      } else if (parts.length === 2) {\n        // mm:ss.ms\n        const [minutes, seconds] = parts;\n        return parseInt(minutes) * 60 + parseFloat(seconds);\n      }\n    }\n    return parseFloat(value);\n  };\n  const getFormatHint = event => {\n    const fieldEvents = ['HJ', 'PV', 'LJ', 'TJ', 'SP', 'DT', 'HT', 'JT'];\n    const sprintEvents = ['50m', '55m', '60m', '100m', '200m', '300m', '400m', '50mH', '55mH', '60mH', '110mH', '400mH'];\n    const distanceEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', '2Miles', '5000m', '10000m', '2000mSC', '3000mSC'];\n    const ultraEvents = ['5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km'];\n    if (fieldEvents.includes(event)) return '(m.cm)';\n    if (sprintEvents.includes(event)) return '(ss.ms)';\n    if (distanceEvents.includes(event)) return '(mm:ss.ms)';\n    if (ultraEvents.includes(event)) return '(hh:mm:ss.ms)';\n    return '';\n  };\n  const renderResults = () => {\n    if (!points && !performance) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"points\",\n        children: mode === 'points' ? `${Math.round(points)} points` : `${performance} ${eventType}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: activeTab === 'calculator' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculator-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"calculator-form\",\n            onSubmit: e => {\n              e.preventDefault();\n              calculate();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gender-toggle\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toggle-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-slider ${gender === 'womens' ? 'right' : 'left'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-option ${gender === 'mens' ? 'active' : ''}`,\n                  onClick: () => {\n                    setGender('mens');\n                    setPoints(null);\n                    setPerformance('');\n                    setEquivalentResults(null);\n                  },\n                  children: \"Men\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-option ${gender === 'womens' ? 'active' : ''}`,\n                  onClick: () => {\n                    setGender('womens');\n                    setPoints(null);\n                    setPerformance('');\n                    setEquivalentResults(null);\n                  },\n                  children: \"Women\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"season-toggle\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toggle-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-slider ${season === 'indoor' ? 'right' : 'left'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-option ${season === 'outdoor' ? 'active' : ''}`,\n                  onClick: () => setSeason('outdoor'),\n                  children: \"Outdoor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-option ${season === 'indoor' ? 'active' : ''}`,\n                  onClick: () => setSeason('indoor'),\n                  children: \"Indoor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mode-toggle\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toggle-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-slider ${mode === 'points' ? 'right' : 'left'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-option ${mode === 'performance' ? 'active' : ''}`,\n                  onClick: () => {\n                    setMode('performance');\n                    setPoints(null);\n                    setPerformance('');\n                  },\n                  children: \"Performance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `toggle-option ${mode === 'points' ? 'active' : ''}`,\n                  onClick: () => {\n                    setMode('points');\n                    setPoints(null);\n                    setPerformance('');\n                  },\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-selection\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"event-select\",\n                children: \"Event:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"event-select\",\n                value: eventType,\n                onChange: e => setEventType(e.target.value),\n                className: \"event-dropdown\",\n                children: Object.entries(events[season]).map(([category, categoryEvents]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                  label: category,\n                  children: categoryEvents.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: event,\n                    children: event\n                  }, event, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 27\n                  }, this))\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"performance-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"value-input\",\n                children: mode === 'performance' ? 'Performance:' : 'Points:'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"value-input\",\n                type: \"text\",\n                value: mode === 'performance' ? performance : points,\n                onChange: e => {\n                  if (mode === 'performance') {\n                    const formattedValue = formatInputValue(e.target.value, eventType);\n                    setPerformance(formattedValue);\n                  } else {\n                    setPoints(e.target.value);\n                  }\n                },\n                className: \"performance-field\",\n                placeholder: mode === 'performance' ? `Enter ${eventType} performance ${getFormatHint(eventType)}` : \"Enter points (0-1400)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), WIND_AFFECTED_EVENTS.includes(eventType) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Wind Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wind-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Wind Speed (m/s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    step: \"0.1\",\n                    value: windSpeed,\n                    onChange: e => setWindSpeed(e.target.value),\n                    placeholder: \"Enter wind speed\",\n                    disabled: !hasWindInfo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wind-toggle\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: hasWindInfo,\n                      onChange: e => setHasWindInfo(e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 27\n                    }, this), \"Wind Information Available\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-info\",\n                children: hasWindInfo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Wind Modification: \", calculateWindModification(windSpeed), \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No Wind Information (-30 points)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"calculate-button\",\n              disabled: loading,\n              children: loading ? 'Calculating...' : 'Calculate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), renderResults()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), equivalentResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comparison-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Equivalent Performances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: Object.entries(events[season]).map(([category, categoryEvents]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: categoryEvents.map(event => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: event\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: equivalentResults[event] ? formatPerformance(equivalentResults[event], event) : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 31\n                    }, this)]\n                  }, event, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 23\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this) : activeTab === 'competition' ? /*#__PURE__*/_jsxDEV(CompetitionTable, {\n        points: points,\n        onCalculatePerformance: calculatePerformance,\n        eventType: eventType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nD2xHqvVrRqfC7OoMmrO26uqSUo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","CompetitionTable","WIND_AFFECTED_EVENTS","calculateWindModification","About","jsxDEV","_jsxDEV","App","_s","eventType","setEventType","performance","setPerformance","points","setPoints","season","setSeason","loading","setLoading","mode","setMode","equivalentResults","setEquivalentResults","gender","setGender","activeTab","setActiveTab","windSpeed","setWindSpeed","hasWindInfo","setHasWindInfo","events","outdoor","indoor","availableEvents","Object","values","flat","includes","calculateEquivalents","pointsValue","results","categoryEvents","event","response","fetch","method","headers","body","JSON","stringify","event_type","data","json","error","console","calculate","Math","round","calculatePerformance","getPlaceholder","formatPerformance","value","timeEvents","totalSeconds","parseFloat","hours","floor","minutes","seconds","milliseconds","toString","padStart","formatInputValue","fieldEvents","sprintEvents","distanceEvents","ultraEvents","_parts$","replace","parts","split","length","slice","_parts$2","_secParts$","secParts","_secParts$2","parsePerformanceValue","parseInt","getFormatHint","renderResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","onClick","htmlFor","id","onChange","target","entries","map","category","label","type","formattedValue","placeholder","step","disabled","checked","onCalculatePerformance","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CompetitionTable from './CompetitionTable';\nimport { WIND_AFFECTED_EVENTS, calculateWindModification } from './utils/windModification';\nimport About from './components/About';\n\nfunction App() {\n  const [eventType, setEventType] = useState('100m');\n  const [performance, setPerformance] = useState('');\n  const [points, setPoints] = useState(null);\n  const [season, setSeason] = useState('outdoor');\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState('performance'); // 'performance' or 'points' mode\n  const [equivalentResults, setEquivalentResults] = useState(null);\n  const [gender, setGender] = useState('mens');\n  const [activeTab, setActiveTab] = useState('calculator');\n  const [windSpeed, setWindSpeed] = useState('');\n  const [hasWindInfo, setHasWindInfo] = useState(true);\n\n  // Separate events for indoor and outdoor\n  const events = {\n    outdoor: {\n      'Sprint Events': ['100m', '200m', '300m', '400m', '500m'],\n      'Middle Distance': ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m'],\n      'Long Distance': ['2Miles', '5000m', '10000m', '5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km'],\n      'Hurdles': ['110mH', '400mH'],\n      'Steeplechase': ['2000mSC', '3000mSC'],\n      'Jumps': ['HJ', 'PV', 'LJ', 'TJ'],\n      'Throws': ['SP', 'DT', 'HT', 'JT'],\n      'Combined': ['Decathlon']\n    },\n    indoor: {\n      'Sprint Events': ['50m', '55m', '60m', '200m', '300m', '400m', '500m'],\n      'Hurdles': ['50mH', '55mH', '60mH'],\n      'Middle Distance': ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m'],\n      'Long Distance': ['2Miles', '5000m'],\n      'Jumps': ['HJ', 'PV', 'LJ', 'TJ'],\n      'Throws': ['SP'],\n      'Combined': ['Heptathlon']\n    }\n  };\n\n  // Reset event type when season changes\n  useEffect(() => {\n    const availableEvents = Object.values(events[season]).flat();\n    if (!availableEvents.includes(eventType)) {\n      setEventType(availableEvents[0]);\n    }\n  }, [season, eventType, events]);\n\n  const calculateEquivalents = async (pointsValue) => {\n    if (!pointsValue) return;\n    \n    const results = {};\n    for (const categoryEvents of Object.values(events[season])) {\n      for (const event of categoryEvents) {\n        try {\n          const response = await fetch('http://localhost:5001/api/calculate-performance', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n              event_type: event,\n              points: pointsValue,\n              season: season\n            }),\n          });\n          \n          const data = await response.json();\n          if (!data.error) {\n            results[event] = data.performance;\n          }\n        } catch (error) {\n          console.error(`Error calculating for ${event}:`, error);\n        }\n      }\n    }\n    setEquivalentResults(results);\n  };\n\n  const calculate = async () => {\n    try {\n      if (mode === 'points') {\n        // Performance to Points calculation\n        const response = await fetch('http://localhost:5001/api/calculate-points', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            event_type: eventType,\n            performance: performance,\n            gender: gender,\n            season: season\n          }),\n        });\n        const data = await response.json();\n        setPoints(Math.round(data.points));\n      } else {\n        // Points to Performance calculation\n        const response = await fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            event_type: eventType,\n            points: points,\n            gender: gender,\n            season: season\n          }),\n        });\n        const data = await response.json();\n        setPerformance(data.performance);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const calculatePerformance = async (points, eventType) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/calculate-performance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          event_type: eventType,\n          points: points,\n          season: season\n        }),\n      });\n      \n      const data = await response.json();\n      return data.performance;\n    } catch (error) {\n      console.error('Error calculating performance:', error);\n      return null;\n    }\n  };\n\n  const getPlaceholder = () => {\n    if (eventType.includes('Jump')) return 'Enter height/distance (m)';\n    if (eventType.includes('Vault')) return 'Enter height/distance (m)';\n    if (eventType.includes('Put') || eventType.includes('Throw') || \n        eventType.includes('Discus') || eventType.includes('Hammer')) return 'Enter distance (m)';\n    return 'Enter time (seconds)';\n  };\n\n  const formatPerformance = (value, event) => {\n    // Events that need time formatting (longer than 400m)\n    const timeEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', \n                       '2Miles', '5000m', '10000m', '5km', '10km', '15km', '10Miles', \n                       '20km', 'HalfMarathon', '25km', '30km', 'Marathon', '100km',\n                       '2000mSC', '3000mSC'];\n\n    if (!timeEvents.includes(event)) {\n      return value;\n    }\n\n    // Convert to seconds\n    const totalSeconds = parseFloat(value);\n    \n    // Calculate hours, minutes, seconds, and milliseconds\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = Math.floor(totalSeconds % 60);\n    const milliseconds = Math.round((totalSeconds % 1) * 100);\n\n    // Format based on duration\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n    } else if (minutes > 0) {\n      return `${minutes}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n    } else {\n      return `${seconds}.${milliseconds.toString().padStart(2, '0')}`;\n    }\n  };\n\n  const formatInputValue = (value, event) => {\n    // Field events: allow only numbers with up to 2 decimal places\n    const fieldEvents = ['HJ', 'PV', 'LJ', 'TJ', 'SP', 'DT', 'HT', 'JT'];\n    \n    // Sprint events: allow ss.ms format\n    const sprintEvents = ['50m', '55m', '60m', '100m', '200m', '300m', '400m', \n                         '50mH', '55mH', '60mH', '110mH', '400mH'];\n    \n    // Distance events: allow mm:ss.ms format\n    const distanceEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', \n                           '2Miles', '5000m', '10000m', '2000mSC', '3000mSC'];\n\n    // Marathon and ultra: allow hh:mm:ss.ms format\n    const ultraEvents = ['5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', \n                        '25km', '30km', 'Marathon', '100km'];\n\n    if (fieldEvents.includes(event)) {\n      // Remove any non-numeric characters except decimal point\n      value = value.replace(/[^\\d.]/g, '');\n      // Ensure only one decimal point\n      const parts = value.split('.');\n      if (parts.length > 2) value = parts[0] + '.' + parts[1];\n      // Limit to 2 decimal places\n      if (parts[1]?.length > 2) value = parts[0] + '.' + parts[1].slice(0, 2);\n    } \n    else if (sprintEvents.includes(event)) {\n      // Format as ss.ms\n      value = value.replace(/[^\\d.]/g, '');\n      const parts = value.split('.');\n      if (parts.length > 2) value = parts[0] + '.' + parts[1];\n      if (parts[1]?.length > 2) value = parts[0] + '.' + parts[1].slice(0, 2);\n    }\n    else if (distanceEvents.includes(event)) {\n      // Format as mm:ss.ms\n      value = value.replace(/[^\\d:.]/, '');\n      const parts = value.split(':');\n      if (parts.length > 2) {\n        value = parts[0] + ':' + parts[1];\n      }\n      if (parts[1]) {\n        const secParts = parts[1].split('.');\n        if (secParts.length > 2) {\n          value = parts[0] + ':' + secParts[0] + '.' + secParts[1];\n        }\n        if (secParts[1]?.length > 2) {\n          value = parts[0] + ':' + secParts[0] + '.' + secParts[1].slice(0, 2);\n        }\n      }\n    }\n    else if (ultraEvents.includes(event)) {\n      // Format as hh:mm:ss.ms\n      value = value.replace(/[^\\d:.]/, '');\n      const parts = value.split(':');\n      if (parts.length > 3) {\n        value = parts[0] + ':' + parts[1] + ':' + parts[2];\n      }\n      if (parts[2]) {\n        const secParts = parts[2].split('.');\n        if (secParts.length > 2) {\n          value = `${parts[0]}:${parts[1]}:${secParts[0]}.${secParts[1]}`;\n        }\n        if (secParts[1]?.length > 2) {\n          value = `${parts[0]}:${parts[1]}:${secParts[0]}.${secParts[1].slice(0, 2)}`;\n        }\n      }\n    }\n    \n    return value;\n  };\n\n  const parsePerformanceValue = (value, event) => {\n    if (!value) return null;\n\n    const ultraEvents = ['5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', \n                        '25km', '30km', 'Marathon', '100km'];\n    const distanceEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', \n                           '2Miles', '5000m', '10000m', '2000mSC', '3000mSC'];\n\n    if (ultraEvents.includes(event) || distanceEvents.includes(event)) {\n      const parts = value.split(':');\n      if (parts.length === 3) {\n        // hh:mm:ss.ms\n        const [hours, minutes, seconds] = parts;\n        return (parseInt(hours) * 3600) + (parseInt(minutes) * 60) + parseFloat(seconds);\n      } else if (parts.length === 2) {\n        // mm:ss.ms\n        const [minutes, seconds] = parts;\n        return (parseInt(minutes) * 60) + parseFloat(seconds);\n      }\n    }\n    \n    return parseFloat(value);\n  };\n\n  const getFormatHint = (event) => {\n    const fieldEvents = ['HJ', 'PV', 'LJ', 'TJ', 'SP', 'DT', 'HT', 'JT'];\n    const sprintEvents = ['50m', '55m', '60m', '100m', '200m', '300m', '400m', \n                         '50mH', '55mH', '60mH', '110mH', '400mH'];\n    const distanceEvents = ['600m', '800m', '1000m', '1500m', 'Mile', '2000m', '3000m', \n                           '2Miles', '5000m', '10000m', '2000mSC', '3000mSC'];\n    const ultraEvents = ['5km', '10km', '15km', '10Miles', '20km', 'HalfMarathon', \n                        '25km', '30km', 'Marathon', '100km'];\n\n    if (fieldEvents.includes(event)) return '(m.cm)';\n    if (sprintEvents.includes(event)) return '(ss.ms)';\n    if (distanceEvents.includes(event)) return '(mm:ss.ms)';\n    if (ultraEvents.includes(event)) return '(hh:mm:ss.ms)';\n    return '';\n  };\n\n  const renderResults = () => {\n    if (!points && !performance) return null;\n    \n    return (\n      <div className=\"results\">\n        <h2>Results</h2>\n        <p className=\"points\">\n          {mode === 'points' \n            ? `${Math.round(points)} points` \n            : `${performance} ${eventType}`}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar activeTab={activeTab} setActiveTab={setActiveTab} />\n      \n      <main className=\"main-content\">\n        {activeTab === 'calculator' ? (\n          <div className=\"content-container\">\n            <div className=\"calculator-wrapper\">\n              <form className=\"calculator-form\" onSubmit={(e) => { e.preventDefault(); calculate(); }}>\n                <div className=\"gender-toggle\">\n                  <div className=\"toggle-container\">\n                    <div \n                      className={`toggle-slider ${gender === 'womens' ? 'right' : 'left'}`}\n                    />\n                    <div \n                      className={`toggle-option ${gender === 'mens' ? 'active' : ''}`}\n                      onClick={() => {\n                        setGender('mens');\n                        setPoints(null);\n                        setPerformance('');\n                        setEquivalentResults(null);\n                      }}\n                    >\n                      Men\n                    </div>\n                    <div \n                      className={`toggle-option ${gender === 'womens' ? 'active' : ''}`}\n                      onClick={() => {\n                        setGender('womens');\n                        setPoints(null);\n                        setPerformance('');\n                        setEquivalentResults(null);\n                      }}\n                    >\n                      Women\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"season-toggle\">\n                  <div className=\"toggle-container\">\n                    <div \n                      className={`toggle-slider ${season === 'indoor' ? 'right' : 'left'}`}\n                    />\n                    <div \n                      className={`toggle-option ${season === 'outdoor' ? 'active' : ''}`}\n                      onClick={() => setSeason('outdoor')}\n                    >\n                      Outdoor\n                    </div>\n                    <div \n                      className={`toggle-option ${season === 'indoor' ? 'active' : ''}`}\n                      onClick={() => setSeason('indoor')}\n                    >\n                      Indoor\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mode-toggle\">\n                  <div className=\"toggle-container\">\n                    <div \n                      className={`toggle-slider ${mode === 'points' ? 'right' : 'left'}`}\n                    />\n                    <div \n                      className={`toggle-option ${mode === 'performance' ? 'active' : ''}`}\n                      onClick={() => {\n                        setMode('performance');\n                        setPoints(null);\n                        setPerformance('');\n                      }}\n                    >\n                      Performance\n                    </div>\n                    <div \n                      className={`toggle-option ${mode === 'points' ? 'active' : ''}`}\n                      onClick={() => {\n                        setMode('points');\n                        setPoints(null);\n                        setPerformance('');\n                      }}\n                    >\n                      Points\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"event-selection\">\n                  <label htmlFor=\"event-select\">Event:</label>\n                  <select\n                    id=\"event-select\"\n                    value={eventType}\n                    onChange={(e) => setEventType(e.target.value)}\n                    className=\"event-dropdown\"\n                  >\n                    {Object.entries(events[season]).map(([category, categoryEvents]) => (\n                      <optgroup key={category} label={category}>\n                        {categoryEvents.map(event => (\n                          <option key={event} value={event}>{event}</option>\n                        ))}\n                      </optgroup>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"performance-input\">\n                  <label htmlFor=\"value-input\">\n                    {mode === 'performance' ? 'Performance:' : 'Points:'}\n                  </label>\n                  <input\n                    id=\"value-input\"\n                    type=\"text\"\n                    value={mode === 'performance' ? performance : points}\n                    onChange={(e) => {\n                      if (mode === 'performance') {\n                        const formattedValue = formatInputValue(e.target.value, eventType);\n                        setPerformance(formattedValue);\n                      } else {\n                        setPoints(e.target.value);\n                      }\n                    }}\n                    className=\"performance-field\"\n                    placeholder={mode === 'performance' \n                      ? `Enter ${eventType} performance ${getFormatHint(eventType)}` \n                      : \"Enter points (0-1400)\"}\n                  />\n                </div>\n\n                {WIND_AFFECTED_EVENTS.includes(eventType) && (\n                  <div className=\"wind-section\">\n                    <h3>Wind Information</h3>\n                    <div className=\"wind-controls\">\n                      <div className=\"wind-input\">\n                        <label>Wind Speed (m/s)</label>\n                        <input\n                          type=\"number\"\n                          step=\"0.1\"\n                          value={windSpeed}\n                          onChange={(e) => setWindSpeed(e.target.value)}\n                          placeholder=\"Enter wind speed\"\n                          disabled={!hasWindInfo}\n                        />\n                      </div>\n                      <div className=\"wind-toggle\">\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={hasWindInfo}\n                            onChange={(e) => setHasWindInfo(e.target.checked)}\n                          />\n                          Wind Information Available\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"wind-info\">\n                      {hasWindInfo ? (\n                        <p>Wind Modification: {calculateWindModification(windSpeed)} points</p>\n                      ) : (\n                        <p>No Wind Information (-30 points)</p>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                <button \n                  type=\"submit\" \n                  className=\"calculate-button\"\n                  disabled={loading}\n                >\n                  {loading ? 'Calculating...' : 'Calculate'}\n                </button>\n              </form>\n\n              {renderResults()}\n            </div>\n\n            {equivalentResults && (\n              <div className=\"comparison-table\">\n                <h2>Equivalent Performances</h2>\n                <div className=\"table-container\">\n                  {Object.entries(events[season]).map(([category, categoryEvents]) => (\n                    <div key={category} className=\"category-section\">\n                      <h3>{category}</h3>\n                      <table>\n                        <tbody>\n                          {categoryEvents.map(event => (\n                            <tr key={event}>\n                              <td>{event}</td>\n                              <td>{equivalentResults[event] ? formatPerformance(equivalentResults[event], event) : '-'}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        ) : activeTab === 'competition' ? (\n          <CompetitionTable \n            points={points} \n            onCalculatePerformance={calculatePerformance}\n            eventType={eventType}\n          />\n        ) : (\n          <About />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}