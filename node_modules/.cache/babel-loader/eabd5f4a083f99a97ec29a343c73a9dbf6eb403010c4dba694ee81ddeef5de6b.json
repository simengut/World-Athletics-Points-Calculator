{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/CompetitionTable.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS } from './utils/competitionPoints';\n\n// New Row component to handle the API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableRow({\n  place,\n  targetTotal,\n  eventType,\n  gender,\n  season,\n  baseMeet,\n  basePlace\n}) {\n  _s();\n  const [performances, setPerformances] = useState({});\n  useEffect(() => {\n    let isMounted = true; // For cleanup\n    const controller = new AbortController(); // For cancelling pending requests\n\n    const fetchPerformances = async () => {\n      if (!targetTotal) {\n        setPerformances({});\n        return;\n      }\n\n      // Prepare all valid requests at once\n      const requests = Object.keys(MEET_LABELS).filter(meet => COMPETITION_POINTS[meet][place]) // Only include valid places\n      .map(async meet => {\n        const placePoints = COMPETITION_POINTS[meet][place];\n        const requiredBase = targetTotal - placePoints;\n        try {\n          const response = await fetch('http://localhost:5001/api/calculate-performance', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              event_type: eventType,\n              points: requiredBase,\n              gender: gender,\n              season: season\n            }),\n            signal: controller.signal // Allow request cancellation\n          });\n          const data = await response.json();\n          if (isMounted) {\n            return {\n              meet,\n              performance: formatPerformance(data.performance, eventType)\n            };\n          }\n        } catch (error) {\n          if (error.name === 'AbortError') {\n            console.log('Fetch aborted');\n            return null;\n          }\n          console.error('Error:', error);\n          return null;\n        }\n      });\n\n      // Wait for all requests to complete\n      try {\n        const results = await Promise.all(requests);\n        if (isMounted) {\n          const newPerformances = {};\n          results.forEach(result => {\n            if (result) {\n              newPerformances[result.meet] = result.performance;\n            }\n          });\n          setPerformances(newPerformances);\n        }\n      } catch (error) {\n        console.error('Error in batch processing:', error);\n      }\n    };\n    fetchPerformances();\n\n    // Cleanup function\n    return () => {\n      isMounted = false;\n      controller.abort(); // Cancel any pending requests\n    };\n  }, [targetTotal, place, eventType, gender, season, baseMeet, basePlace]);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: place\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: COMPETITION_POINTS[meet][place] ? performances[meet] || '-' : '-'\n    }, meet, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n// Main CompetitionTable component\n_s(TableRow, \"N5Zyl8NuAXuzVTMef11Jif3TsOE=\");\n_c = TableRow;\nfunction CompetitionTable({\n  points,\n  eventType,\n  gender,\n  season\n}) {\n  _s2();\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"competition-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Competition Level Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Base Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-display\",\n          children: points || 'Enter points'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meet Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: baseMeet,\n          onChange: e => setBaseMeet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"No bonus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: meet,\n            children: MEET_LABELS[meet]\n          }, meet, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), baseMeet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: basePlace,\n          onChange: e => setBasePlace(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), Object.keys(COMPETITION_POINTS[baseMeet]).map(place => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: place,\n            children: place\n          }, place, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Required Performances for Equivalent Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              const targetTotal = points && baseMeet && basePlace ? Number(points) + COMPETITION_POINTS[baseMeet][basePlace] : null;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                place: place,\n                targetTotal: targetTotal,\n                eventType: eventType,\n                gender: gender,\n                season: season,\n                baseMeet: baseMeet,\n                basePlace: basePlace\n              }, place, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total Points (Performance + Placement)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: points && COMPETITION_POINTS[meet][place] ? points + COMPETITION_POINTS[meet][place] : '-'\n                }, meet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this))]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s2(CompetitionTable, \"6cyIxJzZqTnp4He58tvxcH0lejI=\");\n_c2 = CompetitionTable;\nexport default CompetitionTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"TableRow\");\n$RefreshReg$(_c2, \"CompetitionTable\");","map":{"version":3,"names":["useState","useEffect","formatPerformance","COMPETITION_POINTS","MEET_LABELS","jsxDEV","_jsxDEV","TableRow","place","targetTotal","eventType","gender","season","baseMeet","basePlace","_s","performances","setPerformances","isMounted","controller","AbortController","fetchPerformances","requests","Object","keys","filter","meet","map","placePoints","requiredBase","response","fetch","method","headers","body","JSON","stringify","event_type","points","signal","data","json","performance","error","name","console","log","results","Promise","all","newPerformances","forEach","result","abort","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","CompetitionTable","_s2","setBaseMeet","setBasePlace","className","value","onChange","e","target","Array","_","index","Number","_c2","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/CompetitionTable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS } from './utils/competitionPoints';\n\n// New Row component to handle the API calls\nfunction TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n  const [performances, setPerformances] = useState({});\n\n  useEffect(() => {\n    let isMounted = true; // For cleanup\n    const controller = new AbortController(); // For cancelling pending requests\n\n    const fetchPerformances = async () => {\n      if (!targetTotal) {\n        setPerformances({});\n        return;\n      }\n\n      // Prepare all valid requests at once\n      const requests = Object.keys(MEET_LABELS)\n        .filter(meet => COMPETITION_POINTS[meet][place]) // Only include valid places\n        .map(async (meet) => {\n          const placePoints = COMPETITION_POINTS[meet][place];\n          const requiredBase = targetTotal - placePoints;\n          \n          try {\n            const response = await fetch('http://localhost:5001/api/calculate-performance', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                event_type: eventType,\n                points: requiredBase,\n                gender: gender,\n                season: season\n              }),\n              signal: controller.signal // Allow request cancellation\n            });\n            \n            const data = await response.json();\n            if (isMounted) {\n              return { meet, performance: formatPerformance(data.performance, eventType) };\n            }\n          } catch (error) {\n            if (error.name === 'AbortError') {\n              console.log('Fetch aborted');\n              return null;\n            }\n            console.error('Error:', error);\n            return null;\n          }\n        });\n\n      // Wait for all requests to complete\n      try {\n        const results = await Promise.all(requests);\n        if (isMounted) {\n          const newPerformances = {};\n          results.forEach(result => {\n            if (result) {\n              newPerformances[result.meet] = result.performance;\n            }\n          });\n          setPerformances(newPerformances);\n        }\n      } catch (error) {\n        console.error('Error in batch processing:', error);\n      }\n    };\n\n    fetchPerformances();\n\n    // Cleanup function\n    return () => {\n      isMounted = false;\n      controller.abort(); // Cancel any pending requests\n    };\n  }, [targetTotal, place, eventType, gender, season, baseMeet, basePlace]);\n\n  return (\n    <tr>\n      <td>{place}</td>\n      {Object.keys(MEET_LABELS).map(meet => (\n        <td key={meet}>\n          {COMPETITION_POINTS[meet][place] ? performances[meet] || '-' : '-'}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\n// Main CompetitionTable component\nfunction CompetitionTable({ points, eventType, gender, season }) {\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n\n  return (\n    <div className=\"competition-table\">\n      {/* Base Points and Meet Level Settings */}\n      <h2>Competition Level Comparison</h2>\n      <div className=\"settings-grid\">\n        <div className=\"setting-group\">\n          <label>Base Points</label>\n          <div className=\"points-display\">\n            {points || 'Enter points'}\n          </div>\n        </div>\n        <div className=\"setting-group\">\n          <label>Meet Level</label>\n          <select value={baseMeet} onChange={(e) => setBaseMeet(e.target.value)}>\n            <option value=\"\">No bonus</option>\n            {Object.keys(MEET_LABELS).map(meet => (\n              <option key={meet} value={meet}>{MEET_LABELS[meet]}</option>\n            ))}\n          </select>\n        </div>\n        {baseMeet && (\n          <div className=\"setting-group\">\n            <label>Place</label>\n            <select value={basePlace} onChange={(e) => setBasePlace(e.target.value)}>\n              <option value=\"\">Select place</option>\n              {Object.keys(COMPETITION_POINTS[baseMeet]).map(place => (\n                <option key={place} value={place}>{place}</option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {/* Required Performances Table */}\n      <div className=\"table-section\">\n        <h3>Required Performances for Equivalent Points</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                const targetTotal = points && baseMeet && basePlace ? \n                  Number(points) + COMPETITION_POINTS[baseMeet][basePlace] : null;\n                \n                return (\n                  <TableRow\n                    key={place}\n                    place={place}\n                    targetTotal={targetTotal}\n                    eventType={eventType}\n                    gender={gender}\n                    season={season}\n                    baseMeet={baseMeet}\n                    basePlace={basePlace}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Total Points Table */}\n      <div className=\"table-section\">\n        <h3>Total Points (Performance + Placement)</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {points && COMPETITION_POINTS[meet][place] ? \n                          (points + COMPETITION_POINTS[meet][place]) : \n                          '-'}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompetitionTable; "],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,2BAA2B;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC,SAAS;EAAEC,MAAM;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACxF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,IAAIiB,SAAS,GAAG,IAAI,CAAC,CAAC;IACtB,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC,CAAC,CAAC;;IAE1C,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACZ,WAAW,EAAE;QAChBQ,eAAe,CAAC,CAAC,CAAC,CAAC;QACnB;MACF;;MAEA;MACA,MAAMK,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CACtCqB,MAAM,CAACC,IAAI,IAAIvB,kBAAkB,CAACuB,IAAI,CAAC,CAAClB,KAAK,CAAC,CAAC,CAAC;MAAA,CAChDmB,GAAG,CAAC,MAAOD,IAAI,IAAK;QACnB,MAAME,WAAW,GAAGzB,kBAAkB,CAACuB,IAAI,CAAC,CAAClB,KAAK,CAAC;QACnD,MAAMqB,YAAY,GAAGpB,WAAW,GAAGmB,WAAW;QAE9C,IAAI;UACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;YAC9EC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBC,UAAU,EAAE3B,SAAS;cACrB4B,MAAM,EAAET,YAAY;cACpBlB,MAAM,EAAEA,MAAM;cACdC,MAAM,EAAEA;YACV,CAAC,CAAC;YACF2B,MAAM,EAAEpB,UAAU,CAACoB,MAAM,CAAC;UAC5B,CAAC,CAAC;UAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClC,IAAIvB,SAAS,EAAE;YACb,OAAO;cAAEQ,IAAI;cAAEgB,WAAW,EAAExC,iBAAiB,CAACsC,IAAI,CAACE,WAAW,EAAEhC,SAAS;YAAE,CAAC;UAC9E;QACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;UACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;YAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;YAC5B,OAAO,IAAI;UACb;UACAD,OAAO,CAACF,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9B,OAAO,IAAI;QACb;MACF,CAAC,CAAC;;MAEJ;MACA,IAAI;QACF,MAAMI,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC3B,QAAQ,CAAC;QAC3C,IAAIJ,SAAS,EAAE;UACb,MAAMgC,eAAe,GAAG,CAAC,CAAC;UAC1BH,OAAO,CAACI,OAAO,CAACC,MAAM,IAAI;YACxB,IAAIA,MAAM,EAAE;cACVF,eAAe,CAACE,MAAM,CAAC1B,IAAI,CAAC,GAAG0B,MAAM,CAACV,WAAW;YACnD;UACF,CAAC,CAAC;UACFzB,eAAe,CAACiC,eAAe,CAAC;QAClC;MACF,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdE,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDtB,iBAAiB,CAAC,CAAC;;IAEnB;IACA,OAAO,MAAM;MACXH,SAAS,GAAG,KAAK;MACjBC,UAAU,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAAC5C,WAAW,EAAED,KAAK,EAAEE,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAExE,oBACER,OAAA;IAAAgD,QAAA,gBACEhD,OAAA;MAAAgD,QAAA,EAAK9C;IAAK;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACfnC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CAACuB,GAAG,CAACD,IAAI,iBAChCpB,OAAA;MAAAgD,QAAA,EACGnD,kBAAkB,CAACuB,IAAI,CAAC,CAAClB,KAAK,CAAC,GAAGQ,YAAY,CAACU,IAAI,CAAC,IAAI,GAAG,GAAG;IAAG,GAD3DA,IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;;AAEA;AAAA3C,EAAA,CAvFSR,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AAwFjB,SAASqD,gBAAgBA,CAAC;EAAEtB,MAAM;EAAE5B,SAAS;EAAEC,MAAM;EAAEC;AAAO,CAAC,EAAE;EAAAiD,GAAA;EAC/D,MAAM,CAAChD,QAAQ,EAAEiD,WAAW,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,SAAS,EAAEiD,YAAY,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAE9C,oBACEM,OAAA;IAAK0D,SAAS,EAAC,mBAAmB;IAAAV,QAAA,gBAEhChD,OAAA;MAAAgD,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCpD,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAV,QAAA,gBAC5BhD,OAAA;QAAK0D,SAAS,EAAC,eAAe;QAAAV,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BpD,OAAA;UAAK0D,SAAS,EAAC,gBAAgB;UAAAV,QAAA,EAC5BhB,MAAM,IAAI;QAAc;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNpD,OAAA;QAAK0D,SAAS,EAAC,eAAe;QAAAV,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBpD,OAAA;UAAQ2D,KAAK,EAAEpD,QAAS;UAACqD,QAAQ,EAAGC,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAX,QAAA,gBACpEhD,OAAA;YAAQ2D,KAAK,EAAC,EAAE;YAAAX,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACjCnC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CAACuB,GAAG,CAACD,IAAI,iBAChCpB,OAAA;YAAmB2D,KAAK,EAAEvC,IAAK;YAAA4B,QAAA,EAAElD,WAAW,CAACsB,IAAI;UAAC,GAArCA,IAAI;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0C,CAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACL7C,QAAQ,iBACPP,OAAA;QAAK0D,SAAS,EAAC,eAAe;QAAAV,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBpD,OAAA;UAAQ2D,KAAK,EAAEnD,SAAU;UAACoD,QAAQ,EAAGC,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAX,QAAA,gBACtEhD,OAAA;YAAQ2D,KAAK,EAAC,EAAE;YAAAX,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACrCnC,MAAM,CAACC,IAAI,CAACrB,kBAAkB,CAACU,QAAQ,CAAC,CAAC,CAACc,GAAG,CAACnB,KAAK,iBAClDF,OAAA;YAAoB2D,KAAK,EAAEzD,KAAM;YAAA8C,QAAA,EAAE9C;UAAK,GAA3BA,KAAK;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNpD,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAV,QAAA,gBAC5BhD,OAAA;QAAAgD,QAAA,EAAI;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDpD,OAAA;QAAK0D,SAAS,EAAC,mBAAmB;QAAAV,QAAA,eAChChD,OAAA;UAAAgD,QAAA,gBACEhD,OAAA;YAAAgD,QAAA,eACEhD,OAAA;cAAAgD,QAAA,gBACEhD,OAAA;gBAAAgD,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACbnC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CAACuB,GAAG,CAACD,IAAI,iBAChCpB,OAAA;gBAAAgD,QAAA,EAAgBlD,WAAW,CAACsB,IAAI;cAAC,GAAxBA,IAAI;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAyB,CACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpD,OAAA;YAAAgD,QAAA,EACG,CAAC,GAAGe,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC1C,GAAG,CAAC,CAAC2C,CAAC,EAAEC,KAAK,KAAK;cAChC,MAAM/D,KAAK,GAAG+D,KAAK,GAAG,CAAC;cACvB,MAAM9D,WAAW,GAAG6B,MAAM,IAAIzB,QAAQ,IAAIC,SAAS,GACjD0D,MAAM,CAAClC,MAAM,CAAC,GAAGnC,kBAAkB,CAACU,QAAQ,CAAC,CAACC,SAAS,CAAC,GAAG,IAAI;cAEjE,oBACER,OAAA,CAACC,QAAQ;gBAEPC,KAAK,EAAEA,KAAM;gBACbC,WAAW,EAAEA,WAAY;gBACzBC,SAAS,EAAEA,SAAU;gBACrBC,MAAM,EAAEA,MAAO;gBACfC,MAAM,EAAEA,MAAO;gBACfC,QAAQ,EAAEA,QAAS;gBACnBC,SAAS,EAAEA;cAAU,GAPhBN,KAAK;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQX,CAAC;YAEN,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpD,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAV,QAAA,gBAC5BhD,OAAA;QAAAgD,QAAA,EAAI;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CpD,OAAA;QAAK0D,SAAS,EAAC,mBAAmB;QAAAV,QAAA,eAChChD,OAAA;UAAAgD,QAAA,gBACEhD,OAAA;YAAAgD,QAAA,eACEhD,OAAA;cAAAgD,QAAA,gBACEhD,OAAA;gBAAAgD,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACbnC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CAACuB,GAAG,CAACD,IAAI,iBAChCpB,OAAA;gBAAAgD,QAAA,EAAgBlD,WAAW,CAACsB,IAAI;cAAC,GAAxBA,IAAI;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAyB,CACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpD,OAAA;YAAAgD,QAAA,EACG,CAAC,GAAGe,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC1C,GAAG,CAAC,CAAC2C,CAAC,EAAEC,KAAK,KAAK;cAChC,MAAM/D,KAAK,GAAG+D,KAAK,GAAG,CAAC;cACvB,oBACEjE,OAAA;gBAAAgD,QAAA,gBACEhD,OAAA;kBAAAgD,QAAA,EAAK9C;gBAAK;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EACfnC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CAACuB,GAAG,CAACD,IAAI,iBAChCpB,OAAA;kBAAAgD,QAAA,EACGhB,MAAM,IAAInC,kBAAkB,CAACuB,IAAI,CAAC,CAAClB,KAAK,CAAC,GACvC8B,MAAM,GAAGnC,kBAAkB,CAACuB,IAAI,CAAC,CAAClB,KAAK,CAAC,GACzC;gBAAG,GAHEkB,IAAI;kBAAA6B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAIT,CACL,CAAC;cAAA,GARKlD,KAAK;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASV,CAAC;YAET,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,GAAA,CA7GQD,gBAAgB;AAAAa,GAAA,GAAhBb,gBAAgB;AA+GzB,eAAeA,gBAAgB;AAAC,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}