{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/WorldAthleticsCalculator/iaaf-frontend/src/CompetitionTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS, SPECIAL_EVENTS, SPECIAL_EVENTS_POINTS, COMBINED_EVENTS, COMBINED_EVENTS_POINTS } from './utils/competitionPoints';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { calculatePerformancesBatch } from './utils/calculators';\n\n// New Row component to handle the API calls\n// function TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n//   const [performances, setPerformances] = useState({});\n//\n//   useEffect(() => {\n//     const fetchPerformances = async () => {\n//       if (targetTotal) {\n//         try {\n//           const response = await fetch('http://localhost:5001/api/calculate-performances-batch', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               base_points: targetTotal,\n//               event_type: eventType,\n//               gender: gender,\n//               season: season\n//             }),\n//           });\n//           \n//           const data = await response.json();\n//           if (data.performances) {\n//             setPerformances(data.performances);\n//           }\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       } else {\n//         setPerformances({});\n//       }\n//     };\n//\n//     fetchPerformances();\n//   }, [targetTotal, eventType, gender, season]);\n//\n//   return (\n//     <tr>\n//       <td>{place}</td>\n//       {Object.keys(MEET_LABELS).map(meet => (\n//         <td key={meet}>\n//           {COMPETITION_POINTS[meet][place] ? \n//             formatPerformance(performances[meet]?.[place], eventType) || '-' \n//             : '-'}\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// Helper function to get the last scoring place for a meet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLastScoringPlace = meet => {\n  return Math.max(...Object.keys(COMPETITION_POINTS[meet]).map(Number)) + 1;\n};\n\n// Main CompetitionTable component\nfunction CompetitionTable({\n  points,\n  eventType,\n  gender,\n  season\n}) {\n  _s();\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const [performances, setPerformances] = useState({});\n\n  // Calculate equivalent performances when points or base selections change\n  useEffect(() => {\n    const calculateEquivalentPerformances = () => {\n      if (!points) return;\n      const basePoints = baseMeet && basePlace ? basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace] : points;\n      const newPerformances = calculatePerformancesBatch(basePoints, EVENT_CODES[eventType] || eventType, gender, season);\n      setPerformances(newPerformances);\n    };\n    calculateEquivalentPerformances();\n  }, [points, eventType, gender, season, baseMeet, basePlace]);\n  const formatPerformance = (performance, eventType) => {\n    // First check if performance is valid\n    if (!performance || performance === '-' || performance === 'NaN' || isNaN(performance)) {\n      return '-';\n    }\n\n    // For combined events, return whole numbers\n    if (COMBINED_EVENTS.includes(eventType)) {\n      return Math.round(performance);\n    }\n\n    // For track events (ending with 'm' or 'mH' or 'mSC')\n    if (eventType.endsWith('m') || eventType.endsWith('mH') || eventType.endsWith('mSC')) {\n      if (['800m', '1500m', '3000m', '3000mSC', '5000m', '10000m'].includes(eventType)) {\n        // Format mm:ss.xx for middle/long distance\n        const minutes = Math.floor(performance / 60);\n        const seconds = (performance % 60).toFixed(2);\n        return `${minutes}:${seconds.padStart(5, '0')}`;\n      }\n      // Format ss.xx for sprints\n      return Number(performance).toFixed(2);\n    }\n\n    // For field events\n    return Number(performance).toFixed(2);\n  };\n  if (!points) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"competition-table\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a performance or points in the calculator first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  const getPoints = (basePoints, meet, place) => {\n    var _pointsTable$meet;\n    const pointsTable = getPointsTable(eventType);\n    return (_pointsTable$meet = pointsTable[meet]) !== null && _pointsTable$meet !== void 0 && _pointsTable$meet[place] ? parseInt(basePoints) + parseInt(pointsTable[meet][place]) : '-';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"competition-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Competition Level Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This table shows the required performances to achieve the same ranking points at different competition levels.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Each competition category (OW, DF, etc.) awards bonus points based on placement. A lower required performance means more bonus points are awarded at that competition level.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Base Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-display\",\n          children: points || 'Enter points'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meet Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: baseMeet,\n          onChange: e => setBaseMeet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"No bonus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: meet,\n            children: MEET_LABELS[meet]\n          }, meet, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), baseMeet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: basePlace,\n          onChange: e => setBasePlace(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), Object.keys(COMPETITION_POINTS[baseMeet]).map(place => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: place,\n            children: place\n          }, place, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: [getLastScoringPlace(baseMeet), \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), baseMeet && basePlace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Total Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-breakdown\",\n          children: [points, \" + \", basePlace === 'other' ? '0' : SPECIAL_EVENTS.includes(eventType) ? SPECIAL_EVENTS_POINTS[baseMeet][basePlace] : COMBINED_EVENTS.includes(eventType) ? COMBINED_EVENTS_POINTS[baseMeet][basePlace] : COMPETITION_POINTS[baseMeet][basePlace], \" = \", basePlace === 'other' ? points : points + (SPECIAL_EVENTS.includes(eventType) ? SPECIAL_EVENTS_POINTS[baseMeet][basePlace] : COMBINED_EVENTS.includes(eventType) ? COMBINED_EVENTS_POINTS[baseMeet][basePlace] : COMPETITION_POINTS[baseMeet][basePlace])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Required Performances for Equivalent Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => {\n                  var _performances$meet, _performances$meet2;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ((_performances$meet = performances[meet]) === null || _performances$meet === void 0 ? void 0 : _performances$meet[place]) === 'NaN' ? 'NaN' : (_performances$meet2 = performances[meet]) !== null && _performances$meet2 !== void 0 && _performances$meet2[place] ? formatPerformance(performances[meet][place], eventType) : '-'\n                  }, meet, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total Points (Performance + Placing)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"points-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: points ? getPoints(points, meet, place) : '-'\n                }, meet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this))]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionTable, \"q7ReJ0XLLEtXK3XgzodLqU8aejc=\");\n_c = CompetitionTable;\nexport default CompetitionTable;\nvar _c;\n$RefreshReg$(_c, \"CompetitionTable\");","map":{"version":3,"names":["useState","useEffect","formatPerformance","COMPETITION_POINTS","MEET_LABELS","SPECIAL_EVENTS","SPECIAL_EVENTS_POINTS","COMBINED_EVENTS","COMBINED_EVENTS_POINTS","EVENT_CODES","calculatePerformancesBatch","jsxDEV","_jsxDEV","getLastScoringPlace","meet","Math","max","Object","keys","map","Number","CompetitionTable","points","eventType","gender","season","_s","baseMeet","setBaseMeet","basePlace","setBasePlace","performances","setPerformances","calculateEquivalentPerformances","basePoints","newPerformances","performance","isNaN","includes","round","endsWith","minutes","floor","seconds","toFixed","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getPoints","place","_pointsTable$meet","pointsTable","getPointsTable","parseInt","value","onChange","e","target","Array","_","index","_performances$meet","_performances$meet2","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/WorldAthleticsCalculator/iaaf-frontend/src/CompetitionTable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS, SPECIAL_EVENTS, SPECIAL_EVENTS_POINTS, COMBINED_EVENTS, COMBINED_EVENTS_POINTS } from './utils/competitionPoints';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { calculatePerformancesBatch } from './utils/calculators';\n\n// New Row component to handle the API calls\n// function TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n//   const [performances, setPerformances] = useState({});\n//\n//   useEffect(() => {\n//     const fetchPerformances = async () => {\n//       if (targetTotal) {\n//         try {\n//           const response = await fetch('http://localhost:5001/api/calculate-performances-batch', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               base_points: targetTotal,\n//               event_type: eventType,\n//               gender: gender,\n//               season: season\n//             }),\n//           });\n//           \n//           const data = await response.json();\n//           if (data.performances) {\n//             setPerformances(data.performances);\n//           }\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       } else {\n//         setPerformances({});\n//       }\n//     };\n//\n//     fetchPerformances();\n//   }, [targetTotal, eventType, gender, season]);\n//\n//   return (\n//     <tr>\n//       <td>{place}</td>\n//       {Object.keys(MEET_LABELS).map(meet => (\n//         <td key={meet}>\n//           {COMPETITION_POINTS[meet][place] ? \n//             formatPerformance(performances[meet]?.[place], eventType) || '-' \n//             : '-'}\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// Helper function to get the last scoring place for a meet\nconst getLastScoringPlace = (meet) => {\n  return Math.max(...Object.keys(COMPETITION_POINTS[meet]).map(Number)) + 1;\n};\n\n// Main CompetitionTable component\nfunction CompetitionTable({ points, eventType, gender, season }) {\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const [performances, setPerformances] = useState({});\n\n  // Calculate equivalent performances when points or base selections change\n  useEffect(() => {\n    const calculateEquivalentPerformances = () => {\n      if (!points) return;\n\n      const basePoints = baseMeet && basePlace ? \n        (basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace]) : \n        points;\n\n      const newPerformances = calculatePerformancesBatch(\n        basePoints,\n        EVENT_CODES[eventType] || eventType,\n        gender,\n        season\n      );\n      \n      setPerformances(newPerformances);\n    };\n\n    calculateEquivalentPerformances();\n  }, [points, eventType, gender, season, baseMeet, basePlace]);\n\n  const formatPerformance = (performance, eventType) => {\n    // First check if performance is valid\n    if (!performance || performance === '-' || performance === 'NaN' || isNaN(performance)) {\n      return '-';\n    }\n\n    // For combined events, return whole numbers\n    if (COMBINED_EVENTS.includes(eventType)) {\n      return Math.round(performance);\n    }\n\n    // For track events (ending with 'm' or 'mH' or 'mSC')\n    if (eventType.endsWith('m') || eventType.endsWith('mH') || eventType.endsWith('mSC')) {\n      if (['800m', '1500m', '3000m', '3000mSC', '5000m', '10000m'].includes(eventType)) {\n        // Format mm:ss.xx for middle/long distance\n        const minutes = Math.floor(performance / 60);\n        const seconds = (performance % 60).toFixed(2);\n        return `${minutes}:${seconds.padStart(5, '0')}`;\n      }\n      // Format ss.xx for sprints\n      return Number(performance).toFixed(2);\n    }\n\n    // For field events\n    return Number(performance).toFixed(2);\n  };\n\n  if (!points) {\n    return (\n      <div className=\"competition-table\">\n        <p>Please enter a performance or points in the calculator first.</p>\n      </div>\n    );\n  }\n\n  const getPoints = (basePoints, meet, place) => {\n    const pointsTable = getPointsTable(eventType);\n    return pointsTable[meet]?.[place] ? \n      (parseInt(basePoints) + parseInt(pointsTable[meet][place])) : \n      '-';\n  };\n\n  return (\n    <div className=\"competition-table\">\n      <h2>Competition Level Comparison</h2>\n      <div className=\"table-info\">\n        <p>This table shows the required performances to achieve the same ranking points at different competition levels.</p>\n        <p>Each competition category (OW, DF, etc.) awards bonus points based on placement. \n           A lower required performance means more bonus points are awarded at that competition level.</p>\n      </div>\n\n      {/* Base Meet Selection */}\n      <div className=\"settings-grid\">\n        <div className=\"setting-group\">\n          <label>Base Points</label>\n          <div className=\"points-display\">\n            {points || 'Enter points'}\n          </div>\n        </div>\n        <div className=\"setting-group\">\n          <label>Meet Level</label>\n          <select value={baseMeet} onChange={(e) => setBaseMeet(e.target.value)}>\n            <option value=\"\">No bonus</option>\n            {Object.keys(MEET_LABELS).map(meet => (\n              <option key={meet} value={meet}>{MEET_LABELS[meet]}</option>\n            ))}\n          </select>\n        </div>\n        {baseMeet && (\n          <div className=\"setting-group\">\n            <label>Place</label>\n            <select value={basePlace} onChange={(e) => setBasePlace(e.target.value)}>\n              <option value=\"\">Select place</option>\n              {Object.keys(COMPETITION_POINTS[baseMeet]).map(place => (\n                <option key={place} value={place}>{place}</option>\n              ))}\n              <option value=\"other\">{getLastScoringPlace(baseMeet)}+</option>\n            </select>\n          </div>\n        )}\n        {baseMeet && basePlace && (\n          <div className=\"setting-group\">\n            <label>Total Points</label>\n            <div className=\"points-breakdown\">\n              {points} + {basePlace === 'other' ? '0' : \n                (SPECIAL_EVENTS.includes(eventType) \n                  ? SPECIAL_EVENTS_POINTS[baseMeet][basePlace]\n                  : COMBINED_EVENTS.includes(eventType)\n                    ? COMBINED_EVENTS_POINTS[baseMeet][basePlace]\n                    : COMPETITION_POINTS[baseMeet][basePlace]\n                )} = {\n                basePlace === 'other' \n                  ? points \n                  : points + (\n                    SPECIAL_EVENTS.includes(eventType)\n                      ? SPECIAL_EVENTS_POINTS[baseMeet][basePlace]\n                      : COMBINED_EVENTS.includes(eventType)\n                        ? COMBINED_EVENTS_POINTS[baseMeet][basePlace]\n                        : COMPETITION_POINTS[baseMeet][basePlace]\n                  )\n              }\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Required Performances Table */}\n      <div className=\"table-section\">\n        <h3>Required Performances for Equivalent Points</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {performances[meet]?.[place] === 'NaN' ? \n                          'NaN' : \n                          (performances[meet]?.[place] ? \n                            formatPerformance(performances[meet][place], eventType) : \n                            '-'\n                          )}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Total Points Table */}\n      <div className=\"table-section\">\n        <h3>Total Points (Performance + Placing)</h3>\n        <div className=\"points-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {points ? getPoints(points, meet, place) : '-'}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompetitionTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}