{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventComparison({\n  points,\n  gender,\n  season\n}) {\n  _s();\n  const [equivalentPerformances, setEquivalentPerformances] = useState({});\n  useEffect(() => {\n    if (points) {\n      calculateEquivalentPerformances();\n    }\n  }, [points, gender, season]);\n  const calculateEquivalentPerformances = async () => {\n    const events = [\n    // Track Events\n    '100m', '200m', '400m', '800m', '1500m', '3000m', '5000m', '10000m',\n    // Hurdles\n    '100mH', '110mH', '400mH', '3000mSC',\n    // Jumps\n    'HJ', 'PV', 'LJ', 'TJ',\n    // Throws\n    'SP', 'DT', 'HT', 'JT'];\n    const performances = {};\n    for (const event of events) {\n      try {\n        const response = await fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            event_type: event,\n            points: points,\n            gender: gender,\n            season: season\n          })\n        });\n        const data = await response.json();\n        performances[event] = data.performance;\n      } catch (error) {\n        console.error(`Error calculating performance for ${event}:`, error);\n        performances[event] = 'N/A';\n      }\n    }\n    setEquivalentPerformances(performances);\n  };\n  const renderEventSection = (title, events) => {\n    const filteredEvents = getEventsByGenderAndSeason(events, gender, season);\n    if (filteredEvents.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: equivalentPerformances[event] ? formatPerformance(equivalentPerformances[event], event) : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, event, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n  if (!points) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-comparison\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter points to see equivalent performances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Equivalent Performances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), renderEventSection('Sprints & Hurdles', season === 'indoor' ? ['50m', '60m', '200m', '400m', '60mH', '400mH'] : ['100m', '200m', '400m', '100mH', '110mH', '400mH']), renderEventSection('Middle Distance', ['800m', '1500m', '3000m']), season === 'outdoor' && renderEventSection('Long Distance', ['5000m', '10000m']), renderEventSection('Jumps', ['HJ', 'PV', 'LJ', 'TJ']), renderEventSection('Throws', season === 'indoor' ? ['SP'] : ['SP', 'DT', 'HT', 'JT'])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(EventComparison, \"o82SgQz1oKWWvz53Wc5FlTaU98I=\");\n_c = EventComparison;\nexport default EventComparison;\nvar _c;\n$RefreshReg$(_c, \"EventComparison\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","EventComparison","points","gender","season","_s","equivalentPerformances","setEquivalentPerformances","calculateEquivalentPerformances","events","performances","event","response","fetch","method","headers","body","JSON","stringify","event_type","data","json","performance","error","console","renderEventSection","title","filteredEvents","getEventsByGenderAndSeason","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","formatPerformance","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction EventComparison({ points, gender, season }) {\n  const [equivalentPerformances, setEquivalentPerformances] = useState({});\n\n  useEffect(() => {\n    if (points) {\n      calculateEquivalentPerformances();\n    }\n  }, [points, gender, season]);\n\n  const calculateEquivalentPerformances = async () => {\n    const events = [\n      // Track Events\n      '100m', '200m', '400m', '800m', '1500m', '3000m', '5000m', '10000m',\n      // Hurdles\n      '100mH', '110mH', '400mH', '3000mSC',\n      // Jumps\n      'HJ', 'PV', 'LJ', 'TJ',\n      // Throws\n      'SP', 'DT', 'HT', 'JT'\n    ];\n\n    const performances = {};\n    \n    for (const event of events) {\n      try {\n        const response = await fetch('http://localhost:5001/api/calculate-performance', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            event_type: event,\n            points: points,\n            gender: gender,\n            season: season\n          }),\n        });\n        const data = await response.json();\n        performances[event] = data.performance;\n      } catch (error) {\n        console.error(`Error calculating performance for ${event}:`, error);\n        performances[event] = 'N/A';\n      }\n    }\n    \n    setEquivalentPerformances(performances);\n  };\n\n  const renderEventSection = (title, events) => {\n    const filteredEvents = getEventsByGenderAndSeason(events, gender, season);\n    if (filteredEvents.length === 0) return null;\n\n    return (\n      <div className=\"event-section\">\n        <h3>{title}</h3>\n        <table>\n          <tbody>\n            {filteredEvents.map(event => (\n              <tr key={event}>\n                <td>{event}</td>\n                <td>{equivalentPerformances[event] \n                  ? formatPerformance(equivalentPerformances[event], event) \n                  : '-'}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  if (!points) {\n    return (\n      <div className=\"event-comparison\">\n        <p>Enter points to see equivalent performances</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"event-comparison\">\n      <h2>Equivalent Performances</h2>\n      {renderEventSection('Sprints & Hurdles', \n        season === 'indoor' \n          ? ['50m', '60m', '200m', '400m', '60mH', '400mH']\n          : ['100m', '200m', '400m', '100mH', '110mH', '400mH']\n      )}\n      {renderEventSection('Middle Distance', ['800m', '1500m', '3000m'])}\n      {season === 'outdoor' && renderEventSection('Long Distance', ['5000m', '10000m'])}\n      {renderEventSection('Jumps', ['HJ', 'PV', 'LJ', 'TJ'])}\n      {renderEventSection('Throws', \n        season === 'indoor' \n          ? ['SP']\n          : ['SP', 'DT', 'HT', 'JT']\n      )}\n    </div>\n  );\n}\n\nexport default EventComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}