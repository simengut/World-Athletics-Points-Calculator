{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EVENT_CODES = {\n  '60m': '60m',\n  '100m': '100m',\n  '200m': '200m',\n  '400m': '400m',\n  '800m': '800m',\n  '1500m': '1500m',\n  '3000m': '3000m',\n  '5000m': '5000m',\n  '10000m': '10000m',\n  '60mH': '60mH',\n  '100mH': '100mH',\n  '110mH': '110mH',\n  '400mH': '400mH',\n  'High Jump': 'HJ',\n  'Pole Vault': 'PV',\n  'Long Jump': 'LJ',\n  'Triple Jump': 'TJ',\n  'Shot Put': 'SP',\n  'Discus Throw': 'DT',\n  'Hammer Throw': 'HT',\n  'Javelin Throw': 'JT',\n  'Decathlon': 'Decathlon',\n  'Heptathlon': 'Heptathlon',\n  'Pentathlon': 'Pentathlon'\n};\nfunction EventComparison({\n  points,\n  gender,\n  season\n}) {\n  _s();\n  const [performances, setPerformances] = useState({});\n  useEffect(() => {\n    if (points) {\n      const getEventsByGenderAndSeason = () => {\n        if (season === 'indoor') {\n          return ['60m', '200m', '400m', '800m', '1500m', '3000m', gender === 'mens' ? '60mH' : '60mH', 'High Jump', 'Pole Vault', 'Long Jump', 'Triple Jump', 'Shot Put'];\n        }\n        return ['100m', '200m', '400m', '800m', '1500m', '3000m', '5000m', '10000m', gender === 'mens' ? '110mH' : '100mH', '400mH', 'High Jump', 'Pole Vault', 'Long Jump', 'Triple Jump', 'Shot Put', 'Discus Throw', 'Hammer Throw', 'Javelin Throw'];\n      };\n      const calculateEquivalentPerformances = async events => {\n        try {\n          const responses = await Promise.all(events.map(event => {\n            const eventType = EVENT_CODES[event] || event;\n            return fetch('http://localhost:5001/api/calculate-performance', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                event_type: eventType,\n                points: points,\n                gender: gender,\n                season: season\n              })\n            });\n          }));\n          const data = await Promise.all(responses.map(async r => {\n            const result = await r.json();\n            return result;\n          }));\n          const performances = {};\n          events.forEach((event, i) => {\n            performances[event] = data[i].performance;\n          });\n          setPerformances(performances);\n        } catch (error) {\n          console.error('Error calculating equivalent performances:', error);\n        }\n      };\n      const events = getEventsByGenderAndSeason();\n      calculateEquivalentPerformances(events);\n    }\n  }, [points, gender, season]);\n\n  // Helper function to format performances\n  const formatPerformance = (performance, event) => {\n    // For combined events, return the whole number without decimals\n    if (['Decathlon', 'Heptathlon', 'Pentathlon'].includes(event)) {\n      return Math.round(performance).toString();\n    }\n\n    // For track events (ending with 'm' or 'mH')\n    if (event.endsWith('m') || event.endsWith('mH')) {\n      if (['800m', '1500m', '3000m', '5000m', '10000m'].includes(event)) {\n        // Format mm:ss.xx for middle/long distance\n        const minutes = Math.floor(performance / 60);\n        const seconds = (performance % 60).toFixed(2);\n        return `${minutes}:${seconds.padStart(5, '0')}`;\n      }\n      // Format ss.xx for sprints\n      return performance.toFixed(2);\n    }\n\n    // For field events\n    return performance.toFixed(2);\n  };\n  if (!points || Object.keys(performances).length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Equivalent Performances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(performances).map(([event, performance]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatPerformance(performance, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, event, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(EventComparison, \"N5Zyl8NuAXuzVTMef11Jif3TsOE=\");\n_c = EventComparison;\nexport default EventComparison;\nvar _c;\n$RefreshReg$(_c, \"EventComparison\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","EVENT_CODES","EventComparison","points","gender","season","_s","performances","setPerformances","getEventsByGenderAndSeason","calculateEquivalentPerformances","events","responses","Promise","all","map","event","eventType","fetch","method","headers","body","JSON","stringify","event_type","data","r","result","json","forEach","i","performance","error","console","formatPerformance","includes","Math","round","toString","endsWith","minutes","floor","seconds","toFixed","padStart","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst EVENT_CODES = {\n  '60m': '60m',\n  '100m': '100m',\n  '200m': '200m',\n  '400m': '400m',\n  '800m': '800m',\n  '1500m': '1500m',\n  '3000m': '3000m',\n  '5000m': '5000m',\n  '10000m': '10000m',\n  '60mH': '60mH',\n  '100mH': '100mH',\n  '110mH': '110mH',\n  '400mH': '400mH',\n  'High Jump': 'HJ',\n  'Pole Vault': 'PV',\n  'Long Jump': 'LJ',\n  'Triple Jump': 'TJ',\n  'Shot Put': 'SP',\n  'Discus Throw': 'DT',\n  'Hammer Throw': 'HT',\n  'Javelin Throw': 'JT',\n  'Decathlon': 'Decathlon',\n  'Heptathlon': 'Heptathlon',\n  'Pentathlon': 'Pentathlon'\n};\n\nfunction EventComparison({ points, gender, season }) {\n  const [performances, setPerformances] = useState({});\n\n  useEffect(() => {\n    if (points) {\n      const getEventsByGenderAndSeason = () => {\n        if (season === 'indoor') {\n          return [\n            '60m',\n            '200m',\n            '400m',\n            '800m',\n            '1500m',\n            '3000m',\n            gender === 'mens' ? '60mH' : '60mH',\n            'High Jump',\n            'Pole Vault',\n            'Long Jump',\n            'Triple Jump',\n            'Shot Put'\n          ];\n        }\n        return [\n          '100m',\n          '200m',\n          '400m',\n          '800m',\n          '1500m',\n          '3000m',\n          '5000m',\n          '10000m',\n          gender === 'mens' ? '110mH' : '100mH',\n          '400mH',\n          'High Jump',\n          'Pole Vault',\n          'Long Jump',\n          'Triple Jump',\n          'Shot Put',\n          'Discus Throw',\n          'Hammer Throw',\n          'Javelin Throw'\n        ];\n      };\n\n      const calculateEquivalentPerformances = async (events) => {\n        try {\n          const responses = await Promise.all(events.map(event => {\n            const eventType = EVENT_CODES[event] || event;\n            return fetch('http://localhost:5001/api/calculate-performance', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                event_type: eventType,\n                points: points,\n                gender: gender,\n                season: season\n              }),\n            });\n          }));\n\n          const data = await Promise.all(responses.map(async (r) => {\n            const result = await r.json();\n            return result;\n          }));\n\n          const performances = {};\n          events.forEach((event, i) => {\n            performances[event] = data[i].performance;\n          });\n          setPerformances(performances);\n        } catch (error) {\n          console.error('Error calculating equivalent performances:', error);\n        }\n      };\n\n      const events = getEventsByGenderAndSeason();\n      calculateEquivalentPerformances(events);\n    }\n  }, [points, gender, season]);\n\n  // Helper function to format performances\n  const formatPerformance = (performance, event) => {\n    // For combined events, return the whole number without decimals\n    if (['Decathlon', 'Heptathlon', 'Pentathlon'].includes(event)) {\n      return Math.round(performance).toString();\n    }\n\n    // For track events (ending with 'm' or 'mH')\n    if (event.endsWith('m') || event.endsWith('mH')) {\n      if (['800m', '1500m', '3000m', '5000m', '10000m'].includes(event)) {\n        // Format mm:ss.xx for middle/long distance\n        const minutes = Math.floor(performance / 60);\n        const seconds = (performance % 60).toFixed(2);\n        return `${minutes}:${seconds.padStart(5, '0')}`;\n      }\n      // Format ss.xx for sprints\n      return performance.toFixed(2);\n    }\n\n    // For field events\n    return performance.toFixed(2);\n  };\n\n  if (!points || Object.keys(performances).length === 0) return null;\n\n  return (\n    <div className=\"event-comparison\">\n      <h2>Equivalent Performances</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Event</th>\n            <th>Performance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(performances).map(([event, performance]) => (\n            <tr key={event}>\n              <td>{event}</td>\n              <td>{formatPerformance(performance, event)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default EventComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}