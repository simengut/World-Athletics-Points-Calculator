{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventComparison({\n  points,\n  gender,\n  season\n}) {\n  _s();\n  const [equivalentPerformances, setEquivalentPerformances] = useState({});\n\n  // Define gender-specific events\n  const MENS_ONLY_EVENTS = ['110mH'];\n  const WOMENS_ONLY_EVENTS = ['100mH'];\n\n  // Helper function to filter events by gender\n  const getEventsByGender = (events, gender) => {\n    if (gender === 'mens') {\n      return events.filter(event => !WOMENS_ONLY_EVENTS.includes(event));\n    } else {\n      return events.filter(event => !MENS_ONLY_EVENTS.includes(event));\n    }\n  };\n\n  // Helper function to format performances\n  const formatPerformance = (performance, event) => {\n    if (['800m', '1500m', '3000m', '5000m', '10000m', '3000mSC'].includes(event)) {\n      const timeInSeconds = parseFloat(performance);\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = (timeInSeconds % 60).toFixed(2);\n      return `${minutes}:${seconds.padStart(5, '0')}`;\n    } else if (['100m', '200m', '400m', '100mH', '110mH', '400mH'].includes(event)) {\n      return parseFloat(performance).toFixed(2);\n    } else {\n      return parseFloat(performance).toFixed(2);\n    }\n  };\n  useEffect(() => {\n    if (points) {\n      calculateEquivalentPerformances();\n    }\n  }, [points, gender, season]);\n  const calculateEquivalentPerformances = async () => {\n    const allEvents = {\n      sprints: ['100m', '200m', '400m'],\n      hurdles: ['400mH', '100mH', '110mH'],\n      middle: ['800m', '1500m', '3000m', '3000mSC'],\n      long: ['5000m', '10000m'],\n      jumps: ['HJ', 'PV', 'LJ', 'TJ'],\n      throws: ['SP', 'DT', 'HT', 'JT']\n    };\n    const performances = {};\n\n    // Get gender-appropriate events for each category\n    for (const category in allEvents) {\n      const filteredEvents = getEventsByGender(allEvents[category], gender);\n      for (const event of filteredEvents) {\n        try {\n          const response = await fetch('http://localhost:5001/api/calculate-performance', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              event_type: event,\n              points: points,\n              gender: gender,\n              season: season\n            })\n          });\n          const data = await response.json();\n          performances[event] = data.performance;\n        } catch (error) {\n          console.error(`Error calculating performance for ${event}:`, error);\n          performances[event] = 'N/A';\n        }\n      }\n    }\n    setEquivalentPerformances(performances);\n  };\n  const renderEventSection = (title, events) => {\n    const filteredEvents = getEventsByGender(events, gender);\n    if (filteredEvents.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: equivalentPerformances[event] ? formatPerformance(equivalentPerformances[event], event) : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, event, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  if (!points) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-comparison\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter points to see equivalent performances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Equivalent Performances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), renderEventSection('Sprints & Hurdles', ['100m', '200m', '400m', '100mH', '110mH', '400mH']), renderEventSection('Middle Distance', ['800m', '1500m', '3000m', '3000mSC']), renderEventSection('Long Distance', ['5000m', '10000m']), renderEventSection('Jumps', ['HJ', 'PV', 'LJ', 'TJ']), renderEventSection('Throws', ['SP', 'DT', 'HT', 'JT'])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(EventComparison, \"o82SgQz1oKWWvz53Wc5FlTaU98I=\");\n_c = EventComparison;\nexport default EventComparison;\nvar _c;\n$RefreshReg$(_c, \"EventComparison\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","EventComparison","points","gender","season","_s","equivalentPerformances","setEquivalentPerformances","MENS_ONLY_EVENTS","WOMENS_ONLY_EVENTS","getEventsByGender","events","filter","event","includes","formatPerformance","performance","timeInSeconds","parseFloat","minutes","Math","floor","seconds","toFixed","padStart","calculateEquivalentPerformances","allEvents","sprints","hurdles","middle","long","jumps","throws","performances","category","filteredEvents","response","fetch","method","headers","body","JSON","stringify","event_type","data","json","error","console","renderEventSection","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/components/EventComparison.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction EventComparison({ points, gender, season }) {\n  const [equivalentPerformances, setEquivalentPerformances] = useState({});\n\n  // Define gender-specific events\n  const MENS_ONLY_EVENTS = ['110mH'];\n  const WOMENS_ONLY_EVENTS = ['100mH'];\n\n  // Helper function to filter events by gender\n  const getEventsByGender = (events, gender) => {\n    if (gender === 'mens') {\n      return events.filter(event => !WOMENS_ONLY_EVENTS.includes(event));\n    } else {\n      return events.filter(event => !MENS_ONLY_EVENTS.includes(event));\n    }\n  };\n\n  // Helper function to format performances\n  const formatPerformance = (performance, event) => {\n    if (['800m', '1500m', '3000m', '5000m', '10000m', '3000mSC'].includes(event)) {\n      const timeInSeconds = parseFloat(performance);\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = (timeInSeconds % 60).toFixed(2);\n      return `${minutes}:${seconds.padStart(5, '0')}`;\n    }\n    else if (['100m', '200m', '400m', '100mH', '110mH', '400mH'].includes(event)) {\n      return parseFloat(performance).toFixed(2);\n    }\n    else {\n      return parseFloat(performance).toFixed(2);\n    }\n  };\n\n  useEffect(() => {\n    if (points) {\n      calculateEquivalentPerformances();\n    }\n  }, [points, gender, season]);\n\n  const calculateEquivalentPerformances = async () => {\n    const allEvents = {\n      sprints: ['100m', '200m', '400m'],\n      hurdles: ['400mH', '100mH', '110mH'],\n      middle: ['800m', '1500m', '3000m', '3000mSC'],\n      long: ['5000m', '10000m'],\n      jumps: ['HJ', 'PV', 'LJ', 'TJ'],\n      throws: ['SP', 'DT', 'HT', 'JT']\n    };\n\n    const performances = {};\n    \n    // Get gender-appropriate events for each category\n    for (const category in allEvents) {\n      const filteredEvents = getEventsByGender(allEvents[category], gender);\n      for (const event of filteredEvents) {\n        try {\n          const response = await fetch('http://localhost:5001/api/calculate-performance', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              event_type: event,\n              points: points,\n              gender: gender,\n              season: season\n            }),\n          });\n          const data = await response.json();\n          performances[event] = data.performance;\n        } catch (error) {\n          console.error(`Error calculating performance for ${event}:`, error);\n          performances[event] = 'N/A';\n        }\n      }\n    }\n    \n    setEquivalentPerformances(performances);\n  };\n\n  const renderEventSection = (title, events) => {\n    const filteredEvents = getEventsByGender(events, gender);\n    if (filteredEvents.length === 0) return null;\n\n    return (\n      <div className=\"event-section\">\n        <h3>{title}</h3>\n        <table>\n          <tbody>\n            {filteredEvents.map(event => (\n              <tr key={event}>\n                <td>{event}</td>\n                <td>{equivalentPerformances[event] \n                  ? formatPerformance(equivalentPerformances[event], event) \n                  : '-'}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  if (!points) {\n    return (\n      <div className=\"event-comparison\">\n        <p>Enter points to see equivalent performances</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"event-comparison\">\n      <h2>Equivalent Performances</h2>\n      {renderEventSection('Sprints & Hurdles', ['100m', '200m', '400m', '100mH', '110mH', '400mH'])}\n      {renderEventSection('Middle Distance', ['800m', '1500m', '3000m', '3000mSC'])}\n      {renderEventSection('Long Distance', ['5000m', '10000m'])}\n      {renderEventSection('Jumps', ['HJ', 'PV', 'LJ', 'TJ'])}\n      {renderEventSection('Throws', ['SP', 'DT', 'HT', 'JT'])}\n    </div>\n  );\n}\n\nexport default EventComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}