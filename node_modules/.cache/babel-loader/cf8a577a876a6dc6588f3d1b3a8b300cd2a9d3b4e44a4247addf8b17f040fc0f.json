{"ast":null,"code":"export const WIND_AFFECTED_EVENTS = ['100m', '200m', '100mH', '110mH', 'Long Jump', 'Triple Jump'];\n\n// Points modification per wind speed (m/s)\nexport const WIND_MODIFICATIONS = {\n  '-5.0': 30,\n  '-4.0': 24,\n  '-3.0': 18,\n  '-2.0': 12,\n  '-1.0': 6,\n  '0.0': 0,\n  '2.0': 0,\n  // No modification between 0 and +2.0\n  '2.1': -0.6,\n  // Deductions start from here\n  '3.0': -6,\n  '4.0': -12,\n  '5.0': -18\n};\nexport const needsWindInput = (eventType, season) => {\n  // No wind adjustments for any indoor events\n  if (season === 'indoor') {\n    return false;\n  }\n\n  // Only allow wind adjustments for specified outdoor events\n  return WIND_AFFECTED_EVENTS.includes(eventType);\n};\nexport const calculateWindModification = (eventType, windSpeed, points) => {\n  if (!needsWindInput(eventType)) return 0;\n\n  // Convert to number if string\n  windSpeed = Number(windSpeed);\n\n  // No modification between 0 and +2.0\n  if (windSpeed > 0 && windSpeed <= 2.0) return 0;\n\n  // Calculate modification\n  if (windSpeed <= 0) {\n    // Headwind\n    return Math.abs(windSpeed) * 6;\n  } else {\n    // Tailwind (above 2.0)\n    return (windSpeed - 2.0) * -6;\n  }\n};","map":{"version":3,"names":["WIND_AFFECTED_EVENTS","WIND_MODIFICATIONS","needsWindInput","eventType","season","includes","calculateWindModification","windSpeed","points","Number","Math","abs"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/utils/windModification.js"],"sourcesContent":["export const WIND_AFFECTED_EVENTS = [\n  '100m',\n  '200m',\n  '100mH',\n  '110mH',\n  'Long Jump',\n  'Triple Jump'\n];\n\n// Points modification per wind speed (m/s)\nexport const WIND_MODIFICATIONS = {\n  '-5.0': 30,\n  '-4.0': 24,\n  '-3.0': 18,\n  '-2.0': 12,\n  '-1.0': 6,\n  '0.0': 0,\n  '2.0': 0,    // No modification between 0 and +2.0\n  '2.1': -0.6, // Deductions start from here\n  '3.0': -6,\n  '4.0': -12,\n  '5.0': -18\n};\n\nexport const needsWindInput = (eventType, season) => {\n  // No wind adjustments for any indoor events\n  if (season === 'indoor') {\n    return false;\n  }\n  \n  // Only allow wind adjustments for specified outdoor events\n  return WIND_AFFECTED_EVENTS.includes(eventType);\n};\n\nexport const calculateWindModification = (eventType, windSpeed, points) => {\n  if (!needsWindInput(eventType)) return 0;\n  \n  // Convert to number if string\n  windSpeed = Number(windSpeed);\n\n  // No modification between 0 and +2.0\n  if (windSpeed > 0 && windSpeed <= 2.0) return 0;\n\n  // Calculate modification\n  if (windSpeed <= 0) {\n    // Headwind\n    return Math.abs(windSpeed) * 6;\n  } else {\n    // Tailwind (above 2.0)\n    return (windSpeed - 2.0) * -6;\n  }\n}; "],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAClC,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,WAAW,EACX,aAAa,CACd;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG;EAChC,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,EAAE;EACV,MAAM,EAAE,CAAC;EACT,KAAK,EAAE,CAAC;EACR,KAAK,EAAE,CAAC;EAAK;EACb,KAAK,EAAE,CAAC,GAAG;EAAE;EACb,KAAK,EAAE,CAAC,CAAC;EACT,KAAK,EAAE,CAAC,EAAE;EACV,KAAK,EAAE,CAAC;AACV,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,MAAM,KAAK;EACnD;EACA,IAAIA,MAAM,KAAK,QAAQ,EAAE;IACvB,OAAO,KAAK;EACd;;EAEA;EACA,OAAOJ,oBAAoB,CAACK,QAAQ,CAACF,SAAS,CAAC;AACjD,CAAC;AAED,OAAO,MAAMG,yBAAyB,GAAGA,CAACH,SAAS,EAAEI,SAAS,EAAEC,MAAM,KAAK;EACzE,IAAI,CAACN,cAAc,CAACC,SAAS,CAAC,EAAE,OAAO,CAAC;;EAExC;EACAI,SAAS,GAAGE,MAAM,CAACF,SAAS,CAAC;;EAE7B;EACA,IAAIA,SAAS,GAAG,CAAC,IAAIA,SAAS,IAAI,GAAG,EAAE,OAAO,CAAC;;EAE/C;EACA,IAAIA,SAAS,IAAI,CAAC,EAAE;IAClB;IACA,OAAOG,IAAI,CAACC,GAAG,CAACJ,SAAS,CAAC,GAAG,CAAC;EAChC,CAAC,MAAM;IACL;IACA,OAAO,CAACA,SAAS,GAAG,GAAG,IAAI,CAAC,CAAC;EAC/B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}