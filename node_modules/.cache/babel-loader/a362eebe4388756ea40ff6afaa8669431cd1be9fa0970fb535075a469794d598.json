{"ast":null,"code":"var _jsxFileName = \"/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/CompetitionTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS } from './utils/competitionPoints';\nimport { EVENT_CODES } from './utils/eventCodes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\n// New Row component to handle the API calls\n// function TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n//   const [performances, setPerformances] = useState({});\n//\n//   useEffect(() => {\n//     const fetchPerformances = async () => {\n//       if (targetTotal) {\n//         try {\n//           const response = await fetch('http://localhost:5001/api/calculate-performances-batch', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               base_points: targetTotal,\n//               event_type: eventType,\n//               gender: gender,\n//               season: season\n//             }),\n//           });\n//           \n//           const data = await response.json();\n//           if (data.performances) {\n//             setPerformances(data.performances);\n//           }\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       } else {\n//         setPerformances({});\n//       }\n//     };\n//\n//     fetchPerformances();\n//   }, [targetTotal, eventType, gender, season]);\n//\n//   return (\n//     <tr>\n//       <td>{place}</td>\n//       {Object.keys(MEET_LABELS).map(meet => (\n//         <td key={meet}>\n//           {COMPETITION_POINTS[meet][place] ? \n//             formatPerformance(performances[meet]?.[place], eventType) || '-' \n//             : '-'}\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// Helper function to get the last scoring place for a meet\nconst getLastScoringPlace = meet => {\n  return Math.max(...Object.keys(COMPETITION_POINTS[meet]).map(Number)) + 1;\n};\n\n// Main CompetitionTable component\nfunction CompetitionTable({\n  points,\n  eventType,\n  gender,\n  season\n}) {\n  _s();\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const [performances, setPerformances] = useState({});\n\n  // Calculate equivalent performances when points or base selections change\n  useEffect(() => {\n    const calculateEquivalentPerformances = async () => {\n      if (!points) return;\n      const basePoints = baseMeet && basePlace ? basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace] : points;\n      const newPerformances = {};\n      for (const meet of Object.keys(MEET_LABELS)) {\n        newPerformances[meet] = {};\n        for (const place of Object.keys(COMPETITION_POINTS[meet])) {\n          const targetPoints = basePoints - COMPETITION_POINTS[meet][place];\n\n          // Check if target points exceed maximum possible points\n          if (targetPoints > 1400) {\n            newPerformances[meet][place] = 'NaN';\n            continue;\n          }\n          if (targetPoints > 0) {\n            try {\n              const response = await fetch(`${backendUrl}/api/calculate-performance`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  event_type: EVENT_CODES[eventType] || eventType,\n                  points: targetPoints,\n                  gender: gender,\n                  season: season\n                })\n              });\n              const data = await response.json();\n              newPerformances[meet][place] = data.performance;\n            } catch (error) {\n              console.error('Error calculating performance:', error);\n              newPerformances[meet][place] = '-';\n            }\n          } else {\n            newPerformances[meet][place] = '-';\n          }\n        }\n      }\n      setPerformances(newPerformances);\n    };\n    calculateEquivalentPerformances();\n  }, [points, baseMeet, basePlace, eventType, gender, season]);\n  if (!points) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"competition-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Competition Level Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Base Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-display\",\n          children: points || 'Enter points'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meet Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: baseMeet,\n          onChange: e => setBaseMeet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"No bonus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: meet,\n            children: MEET_LABELS[meet]\n          }, meet, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), baseMeet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: basePlace,\n          onChange: e => setBasePlace(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), Object.keys(COMPETITION_POINTS[baseMeet]).map(place => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: place,\n            children: place\n          }, place, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: [getLastScoringPlace(baseMeet), \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), baseMeet && basePlace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Total Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-breakdown\",\n          children: [points, \" + \", basePlace === 'other' ? '0' : COMPETITION_POINTS[baseMeet][basePlace], \" = \", basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Required Performances for Equivalent Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => {\n                  var _performances$meet, _performances$meet2;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ((_performances$meet = performances[meet]) === null || _performances$meet === void 0 ? void 0 : _performances$meet[place]) === 'NaN' ? 'NaN' : (_performances$meet2 = performances[meet]) !== null && _performances$meet2 !== void 0 && _performances$meet2[place] ? formatPerformance(performances[meet][place], eventType) : '-'\n                  }, meet, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total Points (Performance + Placement)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equivalency-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: MEET_LABELS[meet]\n              }, meet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...Array(16)].map((_, index) => {\n              const place = index + 1;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: place\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), Object.keys(MEET_LABELS).map(meet => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: points && COMPETITION_POINTS[meet][place] ? points + COMPETITION_POINTS[meet][place] : '-'\n                }, meet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this))]\n              }, place, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionTable, \"q7ReJ0XLLEtXK3XgzodLqU8aejc=\");\n_c = CompetitionTable;\nexport default CompetitionTable;\nvar _c;\n$RefreshReg$(_c, \"CompetitionTable\");","map":{"version":3,"names":["useState","useEffect","formatPerformance","COMPETITION_POINTS","MEET_LABELS","EVENT_CODES","jsxDEV","_jsxDEV","backendUrl","process","env","REACT_APP_BACKEND_URL","getLastScoringPlace","meet","Math","max","Object","keys","map","Number","CompetitionTable","points","eventType","gender","season","_s","baseMeet","setBaseMeet","basePlace","setBasePlace","performances","setPerformances","calculateEquivalentPerformances","basePoints","newPerformances","place","targetPoints","response","fetch","method","headers","body","JSON","stringify","event_type","data","json","performance","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Array","_","index","_performances$meet","_performances$meet2","_c","$RefreshReg$"],"sources":["/Users/simenguttormsen/Documents/Full_Stack_IAAf_Table/iaaf-frontend/src/CompetitionTable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { formatPerformance } from './utils/formatters';\nimport { COMPETITION_POINTS, MEET_LABELS } from './utils/competitionPoints';\nimport { EVENT_CODES } from './utils/eventCodes';\n\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\n// New Row component to handle the API calls\n// function TableRow({ place, targetTotal, eventType, gender, season, baseMeet, basePlace }) {\n//   const [performances, setPerformances] = useState({});\n//\n//   useEffect(() => {\n//     const fetchPerformances = async () => {\n//       if (targetTotal) {\n//         try {\n//           const response = await fetch('http://localhost:5001/api/calculate-performances-batch', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               base_points: targetTotal,\n//               event_type: eventType,\n//               gender: gender,\n//               season: season\n//             }),\n//           });\n//           \n//           const data = await response.json();\n//           if (data.performances) {\n//             setPerformances(data.performances);\n//           }\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       } else {\n//         setPerformances({});\n//       }\n//     };\n//\n//     fetchPerformances();\n//   }, [targetTotal, eventType, gender, season]);\n//\n//   return (\n//     <tr>\n//       <td>{place}</td>\n//       {Object.keys(MEET_LABELS).map(meet => (\n//         <td key={meet}>\n//           {COMPETITION_POINTS[meet][place] ? \n//             formatPerformance(performances[meet]?.[place], eventType) || '-' \n//             : '-'}\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// Helper function to get the last scoring place for a meet\nconst getLastScoringPlace = (meet) => {\n  return Math.max(...Object.keys(COMPETITION_POINTS[meet]).map(Number)) + 1;\n};\n\n// Main CompetitionTable component\nfunction CompetitionTable({ points, eventType, gender, season }) {\n  const [baseMeet, setBaseMeet] = useState('');\n  const [basePlace, setBasePlace] = useState('');\n  const [performances, setPerformances] = useState({});\n\n  // Calculate equivalent performances when points or base selections change\n  useEffect(() => {\n    const calculateEquivalentPerformances = async () => {\n      if (!points) return;\n\n      const basePoints = baseMeet && basePlace ? \n        (basePlace === 'other' ? points : points + COMPETITION_POINTS[baseMeet][basePlace]) : \n        points;\n\n      const newPerformances = {};\n      \n      for (const meet of Object.keys(MEET_LABELS)) {\n        newPerformances[meet] = {};\n        \n        for (const place of Object.keys(COMPETITION_POINTS[meet])) {\n          const targetPoints = basePoints - COMPETITION_POINTS[meet][place];\n          \n          // Check if target points exceed maximum possible points\n          if (targetPoints > 1400) {\n            newPerformances[meet][place] = 'NaN';\n            continue;\n          }\n          \n          if (targetPoints > 0) {\n            try {\n              const response = await fetch(`${backendUrl}/api/calculate-performance`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                  event_type: EVENT_CODES[eventType] || eventType,\n                  points: targetPoints,\n                  gender: gender,\n                  season: season\n                }),\n              });\n              \n              const data = await response.json();\n              newPerformances[meet][place] = data.performance;\n            } catch (error) {\n              console.error('Error calculating performance:', error);\n              newPerformances[meet][place] = '-';\n            }\n          } else {\n            newPerformances[meet][place] = '-';\n          }\n        }\n      }\n      \n      setPerformances(newPerformances);\n    };\n\n    calculateEquivalentPerformances();\n  }, [points, baseMeet, basePlace, eventType, gender, season]);\n\n  if (!points) return null;\n\n  return (\n    <div className=\"competition-table\">\n      <h2>Competition Level Comparison</h2>\n\n      {/* Base Meet Selection */}\n      <div className=\"settings-grid\">\n        <div className=\"setting-group\">\n          <label>Base Points</label>\n          <div className=\"points-display\">\n            {points || 'Enter points'}\n          </div>\n        </div>\n        <div className=\"setting-group\">\n          <label>Meet Level</label>\n          <select value={baseMeet} onChange={(e) => setBaseMeet(e.target.value)}>\n            <option value=\"\">No bonus</option>\n            {Object.keys(MEET_LABELS).map(meet => (\n              <option key={meet} value={meet}>{MEET_LABELS[meet]}</option>\n            ))}\n          </select>\n        </div>\n        {baseMeet && (\n          <div className=\"setting-group\">\n            <label>Place</label>\n            <select value={basePlace} onChange={(e) => setBasePlace(e.target.value)}>\n              <option value=\"\">Select place</option>\n              {Object.keys(COMPETITION_POINTS[baseMeet]).map(place => (\n                <option key={place} value={place}>{place}</option>\n              ))}\n              <option value=\"other\">{getLastScoringPlace(baseMeet)}+</option>\n            </select>\n          </div>\n        )}\n        {baseMeet && basePlace && (\n          <div className=\"setting-group\">\n            <label>Total Points</label>\n            <div className=\"points-breakdown\">\n              {points} + {basePlace === 'other' ? '0' : COMPETITION_POINTS[baseMeet][basePlace]} = {\n                basePlace === 'other' ? \n                points : \n                points + COMPETITION_POINTS[baseMeet][basePlace]\n              }\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Required Performances Table */}\n      <div className=\"table-section\">\n        <h3>Required Performances for Equivalent Points</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {performances[meet]?.[place] === 'NaN' ? \n                          'NaN' : \n                          (performances[meet]?.[place] ? \n                            formatPerformance(performances[meet][place], eventType) : \n                            '-'\n                          )}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Total Points Table */}\n      <div className=\"table-section\">\n        <h3>Total Points (Performance + Placement)</h3>\n        <div className=\"equivalency-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Place</th>\n                {Object.keys(MEET_LABELS).map(meet => (\n                  <th key={meet}>{MEET_LABELS[meet]}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(16)].map((_, index) => {\n                const place = index + 1;\n                return (\n                  <tr key={place}>\n                    <td>{place}</td>\n                    {Object.keys(MEET_LABELS).map(meet => (\n                      <td key={meet}>\n                        {points && COMPETITION_POINTS[meet][place] ? \n                          (points + COMPETITION_POINTS[meet][place]) : \n                          '-'}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompetitionTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}